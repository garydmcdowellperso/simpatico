{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport fetch from 'isomorphic-unfetch';\nvar store;\nexport var callApi = function callApi(route, method, body, options) {\n  options = _objectSpread({\n    method: method,\n    body: body,\n    headers: {}\n  }, options);\n  options.headers[\"Content-Type\"] = \"application/json; charset=UTF-8\";\n  return fetch(\"/api/\".concat(route), options).then(function (response) {\n    if (!response.ok) {\n      if (response.status === 401 || response.status === 403) {// Log the user out\n      }\n\n      if (response.status === 400) {\n        return response.json().then(function (error) {\n          throw new Error(error.response);\n        });\n      }\n    }\n\n    return response.json();\n  });\n};\nexport var get = function get(route, options) {\n  return callApi(route, \"GET\", undefined, options);\n};\nexport var post = function post(route, body, options) {\n  return callApi(route, \"POST\", body, options);\n};\nexport var putApi = function putApi(route, body, options) {\n  return callApi(route, \"PUT\", body, options);\n};\nexport var remove = function remove(route, body, options) {\n  return callApi(route, \"DELETE\", body, options);\n};\nexport var init = function init(_store) {\n  store = _store;\n};\nvar Api = {\n  get: get,\n  post: post,\n  putApi: putApi,\n  remove: remove,\n  callApi: callApi,\n  init: init\n};\nexport default Api;","map":{"version":3,"sources":["/Users/gary/dev/simpatico/interfaces/web/login/src/lib/api.js"],"names":["fetch","store","callApi","route","method","body","options","headers","then","response","ok","status","json","error","Error","get","undefined","post","putApi","remove","init","_store","Api"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AAEA,IAAIC,KAAJ;AAEA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAQC,MAAR,EAAgBC,IAAhB,EAAsBC,OAAtB,EAAkC;AACvDA,EAAAA,OAAO;AACLF,IAAAA,MAAM,EAANA,MADK;AAELC,IAAAA,IAAI,EAAJA,IAFK;AAGLE,IAAAA,OAAO,EAAE;AAHJ,KAIFD,OAJE,CAAP;AAMAA,EAAAA,OAAO,CAACC,OAAR,CAAgB,cAAhB,IAAkC,iCAAlC;AAEA,SAAOP,KAAK,gBAASG,KAAT,GAAkBG,OAAlB,CAAL,CAAgCE,IAAhC,CAAqC,UAAAC,QAAQ,EAAI;AACtD,QAAI,CAACA,QAAQ,CAACC,EAAd,EAAkB;AAChB,UAAID,QAAQ,CAACE,MAAT,KAAoB,GAApB,IAA2BF,QAAQ,CAACE,MAAT,KAAoB,GAAnD,EAAwD,CACtD;AACD;;AAED,UAAIF,QAAQ,CAACE,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,eAAOF,QAAQ,CAACG,IAAT,GAAgBJ,IAAhB,CAAqB,UAAAK,KAAK,EAAI;AACnC,gBAAM,IAAIC,KAAJ,CAAUD,KAAK,CAACJ,QAAhB,CAAN;AACD,SAFM,CAAP;AAGD;AACF;;AACD,WAAOA,QAAQ,CAACG,IAAT,EAAP;AACD,GAbM,CAAP;AAcD,CAvBM;AAyBP,OAAO,IAAMG,GAAG,GAAG,SAANA,GAAM,CAACZ,KAAD,EAAQG,OAAR,EAAoB;AACrC,SAAOJ,OAAO,CAACC,KAAD,EAAQ,KAAR,EAAea,SAAf,EAA0BV,OAA1B,CAAd;AACD,CAFM;AAIP,OAAO,IAAMW,IAAI,GAAG,SAAPA,IAAO,CAACd,KAAD,EAAQE,IAAR,EAAcC,OAAd,EAA0B;AAC5C,SAAOJ,OAAO,CAACC,KAAD,EAAQ,MAAR,EAAgBE,IAAhB,EAAsBC,OAAtB,CAAd;AACD,CAFM;AAIP,OAAO,IAAMY,MAAM,GAAG,SAATA,MAAS,CAACf,KAAD,EAAQE,IAAR,EAAcC,OAAd,EAA0B;AAC9C,SAAOJ,OAAO,CAACC,KAAD,EAAQ,KAAR,EAAeE,IAAf,EAAqBC,OAArB,CAAd;AACD,CAFM;AAIP,OAAO,IAAMa,MAAM,GAAG,SAATA,MAAS,CAAChB,KAAD,EAAQE,IAAR,EAAcC,OAAd,EAA0B;AAC9C,SAAOJ,OAAO,CAACC,KAAD,EAAQ,QAAR,EAAkBE,IAAlB,EAAwBC,OAAxB,CAAd;AACD,CAFM;AAIP,OAAO,IAAMc,IAAI,GAAG,SAAPA,IAAO,CAAAC,MAAM,EAAI;AAC5BpB,EAAAA,KAAK,GAAGoB,MAAR;AACD,CAFM;AAIP,IAAMC,GAAG,GAAG;AACVP,EAAAA,GAAG,EAAHA,GADU;AAEVE,EAAAA,IAAI,EAAJA,IAFU;AAGVC,EAAAA,MAAM,EAANA,MAHU;AAIVC,EAAAA,MAAM,EAANA,MAJU;AAKVjB,EAAAA,OAAO,EAAPA,OALU;AAMVkB,EAAAA,IAAI,EAAJA;AANU,CAAZ;AASA,eAAeE,GAAf","sourcesContent":["import fetch from 'isomorphic-unfetch';\n\nlet store;\n\nexport const callApi = (route, method, body, options) => {\n  options = {\n    method,\n    body,\n    headers: {},\n    ...options\n  };\n  options.headers[\"Content-Type\"] = \"application/json; charset=UTF-8\";\n\n  return fetch(`/api/${route}`, options).then(response => {\n    if (!response.ok) {\n      if (response.status === 401 || response.status === 403) {\n        // Log the user out\n      }\n\n      if (response.status === 400) {\n        return response.json().then(error => {\n          throw new Error(error.response);\n        });\n      }\n    }\n    return response.json();\n  });\n};\n\nexport const get = (route, options) => {\n  return callApi(route, \"GET\", undefined, options);\n};\n\nexport const post = (route, body, options) => {\n  return callApi(route, \"POST\", body, options);\n};\n\nexport const putApi = (route, body, options) => {\n  return callApi(route, \"PUT\", body, options);\n};\n\nexport const remove = (route, body, options) => {\n  return callApi(route, \"DELETE\", body, options);\n};\n\nexport const init = _store => {\n  store = _store;\n};\n\nconst Api = {\n  get,\n  post,\n  putApi,\n  remove,\n  callApi,\n  init\n};\n\nexport default Api;\n"]},"metadata":{},"sourceType":"module"}