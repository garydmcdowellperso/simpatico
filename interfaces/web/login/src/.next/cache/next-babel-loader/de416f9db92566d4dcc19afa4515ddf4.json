{"ast":null,"code":"import { takeLatest, put } from \"redux-saga/effects\";\nimport { LOGIN_REQUEST, loginRequestSuccess, loginRequestFailure } from \"../actions/auth\";\nimport { get, post } from \"../lib/api\";\n\nfunction* loginRequest(action) {\n  var r = yield post(\"v1/adminloginRequest\", JSON.stringify({\n    username: action.username,\n    password: action.password\n  })).then(function (json) {\n    return put(loginRequestSuccess(json));\n  })[\"catch\"](function (err) {\n    return put(loginRequestFailure(err));\n  });\n  yield r;\n}\n\nexport default function* authSaga() {\n  yield takeLatest(LOGIN_REQUEST, loginRequest);\n}","map":{"version":3,"sources":["/Users/gary/dev/simpatico/interfaces/web/login/src/sagas/auth.js"],"names":["takeLatest","put","LOGIN_REQUEST","loginRequestSuccess","loginRequestFailure","get","post","loginRequest","action","r","JSON","stringify","username","password","then","json","err","authSaga"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,QAAgC,oBAAhC;AACA,SACEC,aADF,EAEEC,mBAFF,EAGEC,mBAHF,QAIO,iBAJP;AAKA,SAASC,GAAT,EAAcC,IAAd,QAA0B,YAA1B;;AAEA,UAAUC,YAAV,CAAuBC,MAAvB,EAA+B;AAC7B,MAAMC,CAAC,GAAG,MAAMH,IAAI,CAClB,sBADkB,EAElBI,IAAI,CAACC,SAAL,CAAe;AACbC,IAAAA,QAAQ,EAAEJ,MAAM,CAACI,QADJ;AAEbC,IAAAA,QAAQ,EAAEL,MAAM,CAACK;AAFJ,GAAf,CAFkB,CAAJ,CAObC,IAPa,CAOR,UAAAC,IAAI;AAAA,WAAId,GAAG,CAACE,mBAAmB,CAACY,IAAD,CAApB,CAAP;AAAA,GAPI,WAQP,UAAAC,GAAG;AAAA,WAAIf,GAAG,CAACG,mBAAmB,CAACY,GAAD,CAApB,CAAP;AAAA,GARI,CAAhB;AASA,QAAMP,CAAN;AACD;;AAED,eAAe,UAAUQ,QAAV,GAAqB;AAClC,QAAMjB,UAAU,CAACE,aAAD,EAAgBK,YAAhB,CAAhB;AACD","sourcesContent":["import { takeLatest, put } from \"redux-saga/effects\";\nimport {\n  LOGIN_REQUEST,\n  loginRequestSuccess,\n  loginRequestFailure\n} from \"../actions/auth\";\nimport { get, post } from \"../lib/api\";\n\nfunction* loginRequest(action) {\n  const r = yield post(\n    \"v1/adminloginRequest\",\n    JSON.stringify({\n      username: action.username,\n      password: action.password\n    })\n  )\n    .then(json => put(loginRequestSuccess(json)))\n    .catch(err => put(loginRequestFailure(err)));\n  yield r;\n}\n\nexport default function* authSaga() {\n  yield takeLatest(LOGIN_REQUEST, loginRequest);\n}\n"]},"metadata":{},"sourceType":"module"}