{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport { Button, Form, Grid, Header, Image, Message, Segment } from 'semantic-ui-react';\nimport { useDispatch } from 'react-redux';\nimport { loginRequest } from \"../actions/auth\";\nexport default function Logn(props) {\n  var dispatch = useDispatch();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isSubmitting = _useState2[0],\n      setSubmitting = _useState2[1];\n\n  return React.createElement(Grid, {\n    textAlign: \"center\",\n    style: {\n      height: '100vh'\n    },\n    verticalAlign: \"middle\"\n  }, React.createElement(Grid.Column, {\n    style: {\n      maxWidth: 450\n    }\n  }, React.createElement(Header, {\n    as: \"h2\",\n    color: \"teal\",\n    textAlign: \"center\"\n  }, React.createElement(Image, {\n    src: require(\"../images/intelligence-collective1.png\")\n  }), \" Log-in to your account\"), React.createElement(Form, {\n    size: \"large\",\n    onSubmit: function onSubmit(e, _ref) {\n      var formData = _ref.formData;\n      e.preventDefault();\n      setSubmitting(true);\n      console.log('here');\n      dispatch(loginRequest({\n        username: values.username,\n        password: values.password\n      }));\n      setTimeout(function () {\n        setSubmitting(false);\n      }, 400);\n    }\n  }, React.createElement(Segment, {\n    stacked: true\n  }, React.createElement(Form.Input, {\n    fluid: true,\n    icon: \"user\",\n    iconPosition: \"left\",\n    placeholder: \"E-mail address\"\n  }), React.createElement(Form.Input, {\n    fluid: true,\n    icon: \"lock\",\n    iconPosition: \"left\",\n    placeholder: \"Password\",\n    type: \"password\"\n  }), React.createElement(Button, {\n    color: \"teal\",\n    content: \"Login\",\n    fluid: true,\n    size: \"large\",\n    disabled: isSubmitting\n  }))), React.createElement(Message, null, \"New to us ? \", React.createElement(\"a\", {\n    href: \"#\"\n  }, \"Sign Up\"))));\n}","map":{"version":3,"sources":["/Users/gary/dev/simpatico/interfaces/web/login/src/components/login.jsx"],"names":["React","useState","Button","Form","Grid","Header","Image","Message","Segment","useDispatch","loginRequest","Logn","props","dispatch","isSubmitting","setSubmitting","height","maxWidth","require","e","formData","preventDefault","console","log","username","values","password","setTimeout"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,IAAvB,EAA6BC,MAA7B,EAAqCC,KAArC,EAA4CC,OAA5C,EAAqDC,OAArD,QAAoE,mBAApE;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,SAASC,YAAT,QAA6B,iBAA7B;AAGA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAClC,MAAMC,QAAQ,GAAGJ,WAAW,EAA5B;;AADkC,kBAEIR,QAAQ,CAAC,KAAD,CAFZ;AAAA;AAAA,MAE3Ba,YAF2B;AAAA,MAEbC,aAFa;;AAIlC,SACE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,QAAhB;AAAyB,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAhC;AAAqD,IAAA,aAAa,EAAC;AAAnE,KACE,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,KAAK,EAAE;AAAEC,MAAAA,QAAQ,EAAE;AAAZ;AAApB,KACE,oBAAC,MAAD;AAAQ,IAAA,EAAE,EAAC,IAAX;AAAgB,IAAA,KAAK,EAAC,MAAtB;AAA6B,IAAA,SAAS,EAAC;AAAvC,KACE,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAEC,OAAO,CAAC,wCAAD;AAAnB,IADF,4BADF,EAIE,oBAAC,IAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,QAAQ,EAAE,kBAACC,CAAD,QAAmB;AAAA,UAAdC,QAAc,QAAdA,QAAc;AAC3BD,MAAAA,CAAC,CAACE,cAAF;AACIN,MAAAA,aAAa,CAAC,IAAD,CAAb;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAV,MAAAA,QAAQ,CACNH,YAAY,CAAC;AACXc,QAAAA,QAAQ,EAAEC,MAAM,CAACD,QADN;AAEXE,QAAAA,QAAQ,EAAED,MAAM,CAACC;AAFN,OAAD,CADN,CAAR;AAOAC,MAAAA,UAAU,CAAC,YAAM;AACfZ,QAAAA,aAAa,CAAC,KAAD,CAAb;AACD,OAFS,EAEP,GAFO,CAAV;AAGH;AAhBL,KAkBE,oBAAC,OAAD;AAAS,IAAA,OAAO;AAAhB,KACE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,KAAK,MAAjB;AAAkB,IAAA,IAAI,EAAC,MAAvB;AAA8B,IAAA,YAAY,EAAC,MAA3C;AAAkD,IAAA,WAAW,EAAC;AAA9D,IADF,EAEE,oBAAC,IAAD,CAAM,KAAN;AACE,IAAA,KAAK,MADP;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,YAAY,EAAC,MAHf;AAIE,IAAA,WAAW,EAAC,UAJd;AAKE,IAAA,IAAI,EAAC;AALP,IAFF,EAUE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAC,MADR;AAEE,IAAA,OAAO,EAAC,OAFV;AAGE,IAAA,KAAK,MAHP;AAIE,IAAA,IAAI,EAAC,OAJP;AAKE,IAAA,QAAQ,EAAED;AALZ,IAVF,CAlBF,CAJF,EAwCE,oBAAC,OAAD,wBACc;AAAG,IAAA,IAAI,EAAC;AAAR,eADd,CAxCF,CADF,CADF;AAgDD","sourcesContent":["import React, { useState } from 'react'\nimport { Button, Form, Grid, Header, Image, Message, Segment } from 'semantic-ui-react'\nimport { useDispatch } from 'react-redux'\n\nimport { loginRequest } from \"../actions/auth\";\n\n\nexport default function Logn(props) {\n  const dispatch = useDispatch();\n  const [isSubmitting, setSubmitting] = useState(false);\n\n  return (\n    <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\n      <Grid.Column style={{ maxWidth: 450 }}>\n        <Header as='h2' color='teal' textAlign='center'>\n          <Image src={require(\"../images/intelligence-collective1.png\")} /> Log-in to your account\n        </Header>\n        <Form \n          size='large'               \n          onSubmit={(e, {formData}) => {\n            e.preventDefault();\n                setSubmitting(true);\n                console.log('here')\n                dispatch(\n                  loginRequest({\n                    username: values.username,\n                    password: values.password\n                  })\n                );\n\n                setTimeout(() => {\n                  setSubmitting(false);\n                }, 400);\n            }}\n          >\n          <Segment stacked>\n            <Form.Input fluid icon='user' iconPosition='left' placeholder='E-mail address' />\n            <Form.Input\n              fluid\n              icon='lock'\n              iconPosition='left'\n              placeholder='Password'\n              type='password'\n            />\n\n            <Button \n              color='teal' \n              content='Login' \n              fluid \n              size='large' \n              disabled={isSubmitting} />\n          </Segment>\n        </Form>\n        <Message>\n          New to us ? <a href='#'>Sign Up</a>\n        </Message>\n      </Grid.Column>\n    </Grid>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}