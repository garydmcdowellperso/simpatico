{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport App from \"next/app\";\nimport React from \"react\";\nimport { applyMiddleware, createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport withRedux from \"next-redux-wrapper\";\nimport createSagaMiddleware from \"redux-saga\";\nimport fetch from 'isomorphic-unfetch';\nimport sagas from \"../sagas\";\nimport allReducers from \"../reducers\";\nimport { verifyTokenRequest } from \"../actions/auth\";\nvar sagaMiddleware = createSagaMiddleware();\nvar store;\n\nvar getUrlParameter = function getUrlParameter(name) {\n  name = name.replace(/[\\[]/, \"\\\\[\").replace(/[\\]]/, \"\\\\]\");\n  var regex = new RegExp(\"[\\\\?&]\".concat(name, \"=([^&#]*)\"));\n  var results = regex.exec(window.location.search);\n  return results === null ? \"\" : decodeURIComponent(results[1].replace(/\\+/g, \" \"));\n};\n\nvar makeStore = function makeStore(initialState) {\n  store = createStore(allReducers, initialState, applyMiddleware(sagaMiddleware));\n  sagaMiddleware.run(sagas);\n  return store;\n};\n\nvar Simpatico =\n/*#__PURE__*/\nfunction (_App) {\n  _inherits(Simpatico, _App);\n\n  function Simpatico() {\n    _classCallCheck(this, Simpatico);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Simpatico).apply(this, arguments));\n  }\n\n  _createClass(Simpatico, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // Check if token passed in - validate it and use the response to populate local storage\n      if (window.location.search.includes(\"token\")) {\n        // Ask server to verify and set cookie\n        store.dispatch(verifyTokenRequest({\n          token: getUrlParameter(\"token\")\n        }));\n      }\n\n      if (!window.location.search.includes(\"token\")) {\n        // Not on the URL so check the localStorage\n        if (localStorage.getItem(\"token\")) {\n          // Ask server to verify and set cookie\n          store.dispatch(verifyTokenRequest({\n            token: localStorage.getItem(\"token\")\n          }));\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          Component = _this$props.Component,\n          pageProps = _this$props.pageProps;\n      return React.createElement(Provider, {\n        store: store\n      }, React.createElement(Component, pageProps));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: async function getInitialProps(_ref) {\n      var Component = _ref.Component,\n          ctx = _ref.ctx,\n          req = _ref.req;\n      var pageProps = Component.getInitialProps ? await Component.getInitialProps(ctx) : {};\n      console.log('YO YO  YO', ctx.req.headers.host);\n      var parts = ctx.req.headers.host.split('.');\n      var name = '';\n\n      if (parts) {\n        name = parts[0];\n      } // Do a check if this debatee exists before trying to render (no saga here, server side)\n\n\n      var res = await fetch(\"http://localhost:8080/api/v1/fetchDebate?debate=\".concat(name));\n      var json = await res.json();\n      console.log('json', json);\n      return {\n        pageProps: pageProps\n      };\n    }\n  }]);\n\n  return Simpatico;\n}(App);\n\nexport default withRedux(makeStore)(Simpatico);","map":{"version":3,"sources":["/Users/gary/dev/simpatico/interfaces/web/home/src/pages/_app.jsx"],"names":["App","React","applyMiddleware","createStore","Provider","withRedux","createSagaMiddleware","fetch","sagas","allReducers","verifyTokenRequest","sagaMiddleware","store","getUrlParameter","name","replace","regex","RegExp","results","exec","window","location","search","decodeURIComponent","makeStore","initialState","run","Simpatico","includes","dispatch","token","localStorage","getItem","props","Component","pageProps","ctx","req","getInitialProps","console","log","headers","host","parts","split","res","json"],"mappings":";;;;;AAAA,OAAOA,GAAP,MAAgB,UAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,WAAP,MAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,iBAAnC;AAEA,IAAMC,cAAc,GAAGL,oBAAoB,EAA3C;AAEA,IAAIM,KAAJ;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,IAAI,EAAI;AAC9BA,EAAAA,IAAI,GAAGA,IAAI,CAACC,OAAL,CAAa,MAAb,EAAqB,KAArB,EAA4BA,OAA5B,CAAoC,MAApC,EAA4C,KAA5C,CAAP;AACA,MAAMC,KAAK,GAAG,IAAIC,MAAJ,iBAAoBH,IAApB,eAAd;AACA,MAAMI,OAAO,GAAGF,KAAK,CAACG,IAAN,CAAWC,MAAM,CAACC,QAAP,CAAgBC,MAA3B,CAAhB;AACA,SAAOJ,OAAO,KAAK,IAAZ,GACH,EADG,GAEHK,kBAAkB,CAACL,OAAO,CAAC,CAAD,CAAP,CAAWH,OAAX,CAAmB,KAAnB,EAA0B,GAA1B,CAAD,CAFtB;AAGD,CAPD;;AASA,IAAMS,SAAS,GAAG,SAAZA,SAAY,CAAAC,YAAY,EAAI;AAChCb,EAAAA,KAAK,GAAGT,WAAW,CACjBM,WADiB,EAEjBgB,YAFiB,EAGjBvB,eAAe,CAACS,cAAD,CAHE,CAAnB;AAKAA,EAAAA,cAAc,CAACe,GAAf,CAAmBlB,KAAnB;AAEA,SAAOI,KAAP;AACD,CATD;;IAWMe,S;;;;;;;;;;;;;wCAoBgB;AAClB;AACA,UAAIP,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuBM,QAAvB,CAAgC,OAAhC,CAAJ,EAA8C;AAC5C;AACAhB,QAAAA,KAAK,CAACiB,QAAN,CACEnB,kBAAkB,CAAC;AACjBoB,UAAAA,KAAK,EAAEjB,eAAe,CAAC,OAAD;AADL,SAAD,CADpB;AAKD;;AAED,UAAI,CAACO,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuBM,QAAvB,CAAgC,OAAhC,CAAL,EAA+C;AAC7C;AACA,YAAIG,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAJ,EAAmC;AACjC;AACApB,UAAAA,KAAK,CAACiB,QAAN,CACEnB,kBAAkB,CAAC;AACjBoB,YAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB;AADU,WAAD,CADpB;AAKD;AACF;AACF;;;6BAEQ;AAAA,wBAC0B,KAAKC,KAD/B;AAAA,UACCC,SADD,eACCA,SADD;AAAA,UACYC,SADZ,eACYA,SADZ;AAGP,aACE,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAEvB;AAAjB,SACE,oBAAC,SAAD,EAAeuB,SAAf,CADF,CADF;AAKD;;;gDAnDqD;AAAA,UAAvBD,SAAuB,QAAvBA,SAAuB;AAAA,UAAZE,GAAY,QAAZA,GAAY;AAAA,UAAPC,GAAO,QAAPA,GAAO;AACpD,UAAMF,SAAS,GAAGD,SAAS,CAACI,eAAV,GACd,MAAMJ,SAAS,CAACI,eAAV,CAA0BF,GAA1B,CADQ,GAEd,EAFJ;AAIAG,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBJ,GAAG,CAACC,GAAJ,CAAQI,OAAR,CAAgBC,IAAzC;AACA,UAAMC,KAAK,GAAGP,GAAG,CAACC,GAAJ,CAAQI,OAAR,CAAgBC,IAAhB,CAAqBE,KAArB,CAA2B,GAA3B,CAAd;AACA,UAAI9B,IAAI,GAAG,EAAX;;AAEA,UAAI6B,KAAJ,EAAW;AACT7B,QAAAA,IAAI,GAAG6B,KAAK,CAAC,CAAD,CAAZ;AACD,OAXmD,CAYpD;;;AACA,UAAME,GAAG,GAAG,MAAMtC,KAAK,2DAAoDO,IAApD,EAAvB;AACA,UAAMgC,IAAI,GAAG,MAAMD,GAAG,CAACC,IAAJ,EAAnB;AACAP,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBM,IAApB;AACA,aAAO;AAAEX,QAAAA,SAAS,EAATA;AAAF,OAAP;AACD;;;;EAlBqBnC,G;;AAuDxB,eAAeK,SAAS,CAACmB,SAAD,CAAT,CAAqBG,SAArB,CAAf","sourcesContent":["import App from \"next/app\";\nimport React from \"react\";\nimport { applyMiddleware, createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport withRedux from \"next-redux-wrapper\";\nimport createSagaMiddleware from \"redux-saga\";\nimport fetch from 'isomorphic-unfetch';\n\nimport sagas from \"../sagas\";\nimport allReducers from \"../reducers\";\nimport { verifyTokenRequest } from \"../actions/auth\";\n\nconst sagaMiddleware = createSagaMiddleware();\n\nlet store;\n\nconst getUrlParameter = name => {\n  name = name.replace(/[\\[]/, \"\\\\[\").replace(/[\\]]/, \"\\\\]\");\n  const regex = new RegExp(`[\\\\?&]${name}=([^&#]*)`);\n  const results = regex.exec(window.location.search);\n  return results === null\n    ? \"\"\n    : decodeURIComponent(results[1].replace(/\\+/g, \" \"));\n};\n\nconst makeStore = initialState => {\n  store = createStore(\n    allReducers,\n    initialState,\n    applyMiddleware(sagaMiddleware)\n  );\n  sagaMiddleware.run(sagas);\n\n  return store;\n};\n\nclass Simpatico extends App {\n  static async getInitialProps({ Component, ctx, req }) {\n    const pageProps = Component.getInitialProps\n      ? await Component.getInitialProps(ctx)\n      : {};\n\n    console.log('YO YO  YO', ctx.req.headers.host);\n    const parts = ctx.req.headers.host.split('.');\n    let name = '';\n\n    if (parts) {\n      name = parts[0];\n    }\n    // Do a check if this debatee exists before trying to render (no saga here, server side)\n    const res = await fetch(`http://localhost:8080/api/v1/fetchDebate?debate=${name}`)\n    const json = await res.json()\n    console.log('json', json);\n    return { pageProps };\n  }\n\n  componentDidMount() {\n    // Check if token passed in - validate it and use the response to populate local storage\n    if (window.location.search.includes(\"token\")) {\n      // Ask server to verify and set cookie\n      store.dispatch(\n        verifyTokenRequest({\n          token: getUrlParameter(\"token\")\n        })\n      );\n    }\n\n    if (!window.location.search.includes(\"token\")) {\n      // Not on the URL so check the localStorage\n      if (localStorage.getItem(\"token\")) {\n        // Ask server to verify and set cookie\n        store.dispatch(\n          verifyTokenRequest({\n            token: localStorage.getItem(\"token\")\n          })\n        );\n      }\n    }\n  }\n\n  render() {\n    const { Component, pageProps } = this.props;\n\n    return (\n      <Provider store={store}>\n        <Component {...pageProps} />\n      </Provider>\n    );\n  }\n}\n\nexport default withRedux(makeStore)(Simpatico);\n"]},"metadata":{},"sourceType":"module"}