{"ast":null,"code":"import React, { useEffect } from \"react\";\nimport Head from 'next/head';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { HTMLRenderer } from \"@react-page/renderer\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Container from \"@material-ui/core/Container\";\nimport { useRouter } from 'next/router';\nimport Footer from \"../components/Footer\";\nimport \"@react-page/core/lib/index.css\"; // we also want to load the stylesheets\n\nimport \"@react-page/core/lib/index.css\"; // we also want to load the stylesheets\n// Require editor ui stylesheet\n\nimport \"@react-page/ui/lib/index.css\"; // Load some exemplary plugins:\n\nimport slate from \"@react-page/plugins-slate\"; // The rich text area plugin\n\nimport \"@react-page/plugins-slate/lib/index.css\"; // Stylesheets for the rich text area plugin\n\nimport background from \"@react-page/plugins-background\"; // A plugin for background images\n\nimport \"@react-page/plugins-background/lib/index.css\"; // Stylesheets for  background layout plugin\n\nimport image from \"@react-page/plugins-image\"; // A plugin for background images\n\nimport \"@react-page/plugins-image/lib/index.css\"; // Stylesheets for  background layout plugin\n\nimport video from \"@react-page/plugins-video\"; // A plugin for background images\n\nimport \"@react-page/plugins-video/lib/index.css\"; // Stylesheets for  background layout plugin\n\nimport spacer from \"@react-page/plugins-spacer\"; // A plugin for background images\n\nimport \"@react-page/plugins-spacer/lib/index.css\"; // Stylesheets for  background layout plugin\n\nimport Header from \"../components/Header\";\nimport { fetchPageRequest } from \"../actions/pages\";\nimport { fetchDebateRequest } from '../actions/debate';\nimport nextI18NextInstance from '../../i18n';\nimport config from '../../config';\nimport { get } from \"../lib/api\";\n\nvar getCurrentLang = function getCurrentLang() {\n  return nextI18NextInstance.i18n.language || 'en';\n};\n\nvar useStyles = makeStyles(function (theme) {\n  return {\n    mainGrid: {\n      marginTop: theme.spacing(3)\n    }\n  };\n});\nvar plugins = {\n  content: [slate(), image, spacer, video],\n  // Define plugins for content cells. To import multiple plugins, use [slate(), image, spacer, divider]\n  layout: [background({\n    defaultPlugin: slate()\n  })] // Define plugins for layout cells\n\n};\n\nfunction CMSPage(props) {\n  var router = useRouter();\n  var pageId = router.query.page;\n  var title = router.query.title;\n  var dispatch = useDispatch();\n  var page = useSelector(function (state) {\n    return state.pages.page;\n  });\n  var debate = useSelector(function (state) {\n    return state.debate.debate;\n  });\n  useEffect(function () {\n    // Fire once, get page and debate\n    dispatch(fetchPageRequest(pageId));\n    dispatch(fetchDebateRequest(window.location.hostname));\n  }, []);\n  console.log('title', title);\n  var classes = useStyles();\n\n  if (!page || !debate) {\n    return React.createElement(\"div\", null);\n  }\n\n  return React.createElement(\"div\", null, React.createElement(Head, null, React.createElement(\"title\", null, debate.slug), React.createElement(\"meta\", {\n    name: \"viewport\",\n    content: \"initial-scale=1.0, width=device-width\"\n  })), React.createElement(React.Fragment, null, React.createElement(CssBaseline, null), React.createElement(Container, {\n    maxWidth: \"lg\"\n  }, React.createElement(Header, {\n    title: debate.slug,\n    header: debate.header\n  }), React.createElement(\"main\", null, React.createElement(HTMLRenderer, {\n    plugins: plugins,\n    state: page.languages[getCurrentLang()]\n  }))), React.createElement(Footer, {\n    title: \"Footer\",\n    description: \"Something here to give the footer a purpose!\"\n  })));\n}\n\nexport async function getServerSideProps(ctx) {\n  // Fetch the page contents\n  var res = await fetch(\"\".concat(config.api.host, \"/v1/fetchPage?id=\").concat(ctx.query.page));\n  var page = await res.json(); // Do a check if this debatee exists before trying to render (no saga here, server side)\n\n  var res2 = await fetch(\"\".concat(config.api.host, \"/v1/fetchDebate?name=\").concat(ctx.req.headers.host));\n  var debate = await res2.json();\n  console.log('page', page);\n  console.log('debate', debate);\n  return {\n    props: {\n      page: page,\n      debate: debate\n    }\n  };\n}\nexport default CMSPage;","map":{"version":3,"sources":["/Users/gary/dev/simpatico/interfaces/web/home/src/pages/cmspage.jsx"],"names":["React","useEffect","Head","useDispatch","useSelector","makeStyles","HTMLRenderer","CssBaseline","Container","useRouter","Footer","slate","background","image","video","spacer","Header","fetchPageRequest","fetchDebateRequest","nextI18NextInstance","config","get","getCurrentLang","i18n","language","useStyles","theme","mainGrid","marginTop","spacing","plugins","content","layout","defaultPlugin","CMSPage","props","router","pageId","query","page","title","dispatch","state","pages","debate","window","location","hostname","console","log","classes","slug","header","languages","getServerSideProps","ctx","res","fetch","api","host","json","res2","req","headers"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport Head from 'next/head'\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { HTMLRenderer } from \"@react-page/renderer\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Container from \"@material-ui/core/Container\";\nimport { useRouter } from 'next/router'\n\nimport Footer from \"../components/Footer\";\n\nimport \"@react-page/core/lib/index.css\"; // we also want to load the stylesheets\n\nimport \"@react-page/core/lib/index.css\"; // we also want to load the stylesheets\n// Require editor ui stylesheet\nimport \"@react-page/ui/lib/index.css\";\n\n// Load some exemplary plugins:\nimport slate from \"@react-page/plugins-slate\"; // The rich text area plugin\nimport \"@react-page/plugins-slate/lib/index.css\"; // Stylesheets for the rich text area plugin\nimport background from \"@react-page/plugins-background\"; // A plugin for background images\nimport \"@react-page/plugins-background/lib/index.css\"; // Stylesheets for  background layout plugin\nimport image from \"@react-page/plugins-image\"; // A plugin for background images\nimport \"@react-page/plugins-image/lib/index.css\"; // Stylesheets for  background layout plugin\nimport video from \"@react-page/plugins-video\"; // A plugin for background images\nimport \"@react-page/plugins-video/lib/index.css\"; // Stylesheets for  background layout plugin\nimport spacer from \"@react-page/plugins-spacer\"; // A plugin for background images\nimport \"@react-page/plugins-spacer/lib/index.css\"; // Stylesheets for  background layout plugin\n\nimport Header from \"../components/Header\";\nimport { fetchPageRequest } from \"../actions/pages\";\nimport { fetchDebateRequest } from '../actions/debate';\n\nimport nextI18NextInstance from '../../i18n';\n\nimport config from '../../config';\nimport { get } from \"../lib/api\";\n\nconst getCurrentLang = () => nextI18NextInstance.i18n.language || 'en';\n\nconst useStyles = makeStyles(theme => ({\n  mainGrid: {\n    marginTop: theme.spacing(3)\n  },\n}));\n\n\nconst plugins = {\n  content: [slate(), image, spacer, video], // Define plugins for content cells. To import multiple plugins, use [slate(), image, spacer, divider]\n  layout: [background({ defaultPlugin: slate() })] // Define plugins for layout cells\n};\n\nfunction CMSPage(props) {\n  const router = useRouter()\n  const pageId = router.query.page;\n  const title = router.query.title;\n\n  const dispatch = useDispatch();\n\n  const page = useSelector(state => state.pages.page);\n\n  const debate = useSelector(state => state.debate.debate);\n\n  useEffect(() => { // Fire once, get page and debate\n    dispatch(fetchPageRequest(pageId));\n    dispatch(fetchDebateRequest(window.location.hostname));\n  }, []);\n\n\n  console.log('title', title)\n  const classes = useStyles();\n\n  if (!page || !debate) {\n    return (<div/>)\n  }\n\n  return (\n    <div>\n      <Head>\n        <title>{debate.slug}</title>\n        <meta name=\"viewport\" content=\"initial-scale=1.0, width=device-width\" />\n      </Head>\n      <>\n        <CssBaseline />\n        <Container maxWidth=\"lg\">\n          <Header title={debate.slug} header={debate.header} />\n          <main>\n            <HTMLRenderer \n                plugins={plugins} \n                state={page.languages[getCurrentLang()]} \n            />\n          </main>\n        </Container>\n        <Footer title=\"Footer\" description=\"Something here to give the footer a purpose!\" />\n      </>\n    </div>\n  );\n}\n\nexport async function getServerSideProps(ctx) {\n  // Fetch the page contents\n  const res = await fetch(`${config.api.host}/v1/fetchPage?id=${ctx.query.page}`)\n  const page = await res.json()\n  \n  // Do a check if this debatee exists before trying to render (no saga here, server side)\n  const res2 = await fetch(`${config.api.host}/v1/fetchDebate?name=${ctx.req.headers.host}`)\n  const debate = await res2.json()\n\n  console.log('page', page)\n  console.log('debate', debate)\n\n  return {\n    props: {\n      page: page,\n      debate: debate\n    }\n  }\n}\n\nexport default CMSPage"]},"metadata":{},"sourceType":"module"}