{"ast":null,"code":"import React, { useEffect } from \"react\";\nimport Head from 'next/head';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Container from \"@material-ui/core/Container\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Header from \"../components/Header\";\nimport Overview from \"../components/Overview\";\nimport Theme from \"../components/Theme\";\nimport Main from \"../components/Main\";\nimport Sidebar from \"../components/Sidebar\";\nimport Footer from \"../components/Footer\";\nimport nextI18NextInstance from '../../i18n';\nimport config from '../../config';\nimport { fetchDebateRequest } from '../actions/debate';\nimport { fetchPostsRequest } from '../actions/posts';\n\nvar getCurrentLang = function getCurrentLang() {\n  return nextI18NextInstance.i18n.language || 'en';\n};\n\nvar useStyles = makeStyles(function (theme) {\n  return {\n    mainGrid: {\n      marginTop: theme.spacing(3)\n    }\n  };\n});\n\nfunction Home(props) {\n  console.log('props', props);\n  var dispatch = useDispatch();\n  var debate = useSelector(function (state) {\n    return state.debate.debate;\n  });\n\n  var _useSelector = useSelector(function (state) {\n    return state.posts;\n  }),\n      posts = _useSelector.posts;\n\n  var isValidToken = useSelector(function (state) {\n    return state.auth.isValidToken;\n  });\n  useEffect(function () {\n    // Fire once, get page and debate\n    if (!debate) {\n      dispatch(fetchDebateRequest(window.location.hostname));\n    }\n\n    if (posts.length === 0) {\n      dispatch(fetchPostsRequest(localStorage.getItem(\"accountId\")));\n    }\n  }, []);\n  useEffect(function () {\n    if (debate && debate.debateType === 'private') {\n      if (!isValidToken) {\n        window.location.href = '/login/';\n      }\n    }\n  }, [isValidToken, debate]);\n  var classes = useStyles();\n\n  if (!debate) {\n    return React.createElement(\"div\", null);\n  }\n\n  return React.createElement(\"div\", null, React.createElement(Head, null, React.createElement(\"title\", null, debate.slug), React.createElement(\"meta\", {\n    name: \"viewport\",\n    content: \"initial-scale=1.0, width=device-width\"\n  }), debate.metaTags.map(function (tag, idx) {\n    if (tag.type === 'property') {\n      return React.createElement(\"meta\", {\n        property: tag.typevalue,\n        content: tag.content,\n        key: idx\n      });\n    } else {\n      return React.createElement(\"meta\", {\n        name: tag.typevalue,\n        content: tag.content,\n        key: idx\n      });\n    }\n  })), debate ? React.createElement(React.Fragment, null, React.createElement(CssBaseline, null), React.createElement(Container, {\n    maxWidth: \"lg\"\n  }, React.createElement(Header, {\n    selected: \"home\",\n    title: debate.slug,\n    header: debate.header\n  }), React.createElement(\"main\", null, React.createElement(Overview, {\n    data: debate.overview\n  }), React.createElement(Grid, {\n    container: true,\n    spacing: 4\n  }, debate.themes.map(function (theme) {\n    return React.createElement(Theme, {\n      key: theme.title[getCurrentLang()],\n      theme: theme\n    });\n  })), React.createElement(Grid, {\n    container: true,\n    spacing: 5,\n    className: classes.mainGrid\n  }, React.createElement(Main, {\n    title: \"Latest contributon\",\n    posts: posts\n  }), React.createElement(Sidebar, {\n    description: debate.sidebar.about[getCurrentLang()],\n    social: debate.sidebar.social\n  })))), React.createElement(Footer, {\n    footer: debate.footer\n  })) : null);\n} //Home.getInitialProps = async ctx => {\n//  if (ctx.req) {\n//    // Do a check if this debate exists before trying to render (no saga here, server side)\n//    const res = await fetch(`${config.api.host}/v1/fetchDebate?name=${ctx.req.headers.host}`)\n//    const debate = await res.json()\n//    return debate\n//  }\n//  return  null\n//}\n\n\nexport async function getServerSideProps(context) {\n  return {\n    props: {\n      debate: {\n        gary: 'hello'\n      }\n    } // will be passed to the page component as props\n\n  };\n}\nexport default Home;","map":null,"metadata":{},"sourceType":"module"}