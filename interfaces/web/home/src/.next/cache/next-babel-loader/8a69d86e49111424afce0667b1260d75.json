{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { FETCH_ALLPAGES_REQUEST, FETCH_ALLPAGES_SUCCESS, FETCH_ALLPAGES_FAILURE, CREATE_PAGE_REQUEST, CREATE_PAGE_SUCCESS, CREATE_PAGE_FAILURE, FETCH_PAGE_REQUEST, FETCH_PAGE_SUCCESS, FETCH_PAGE_FAILURE, UPDATE_PAGE_REQUEST, UPDATE_PAGE_SUCCESS, UPDATE_PAGE_FAILURE } from \"../actions/pages\";\nvar initialState = {\n  pages: [],\n  processing: false,\n  error: \"\",\n  page: null,\n  processing_update: false\n};\nexport default function pages() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case FETCH_ALLPAGES_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        processing: true,\n        error: \"\"\n      });\n\n    case FETCH_ALLPAGES_SUCCESS:\n      // Parse out json and update the store\n      return _objectSpread(_objectSpread({}, state), {}, {\n        processing: false,\n        error: \"\",\n        pages: action.pages\n      });\n\n    case FETCH_ALLPAGES_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        processing: false,\n        error: action.error,\n        pages: []\n      });\n\n    case CREATE_PAGE_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        processing: true,\n        error: \"\"\n      });\n\n    case CREATE_PAGE_SUCCESS:\n      // Parse out json and update the store\n      return _objectSpread(_objectSpread({}, state), {}, {\n        processing: false,\n        error: \"\",\n        page: action.page\n      });\n\n    case CREATE_PAGE_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        processing: false,\n        error: action.error,\n        page: null\n      });\n\n    case FETCH_PAGE_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        processing: true,\n        error: \"\"\n      });\n\n    case FETCH_PAGE_SUCCESS:\n      // Parse out json and update the store\n      return _objectSpread(_objectSpread({}, state), {}, {\n        processing: false,\n        error: \"\",\n        page: action.page\n      });\n\n    case FETCH_PAGE_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        processing: false,\n        error: action.error,\n        page: null\n      });\n\n    case UPDATE_PAGE_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        processing_update: true,\n        error: \"\"\n      });\n\n    case UPDATE_PAGE_SUCCESS:\n      // Parse out json and update the store\n      return _objectSpread(_objectSpread({}, state), {}, {\n        processing_update: false,\n        error: \"\",\n        page: null\n      });\n\n    case UPDATE_PAGE_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        processing_update: false,\n        error: action.error,\n        page: null\n      });\n\n    default:\n      return state;\n  }\n}","map":null,"metadata":{},"sourceType":"module"}