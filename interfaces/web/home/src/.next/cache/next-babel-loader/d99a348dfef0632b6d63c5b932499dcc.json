{"ast":null,"code":"import { takeLatest, put } from \"redux-saga/effects\";\nimport { VERIFY_TOKEN_REQUEST, verifyTokenRequestSuccess, verifyTokenRequestFailure, FETCH_USER_INFO_REQUEST, fetchUserInfoSuccess, fetchUserInfoFailure } from \"../actions/auth\";\nimport { get, post } from \"../lib/api\";\n\nfunction* verifyTokenRequest(action) {\n  var r = yield post(\"v1/verifyToken\", JSON.stringify({\n    token: action.token,\n    role: action.role\n  })).then(function (json) {\n    return put(verifyTokenRequestSuccess(json));\n  })[\"catch\"](function (err) {\n    return put(verifyTokenRequestFailure(err));\n  });\n  yield r;\n}\n\nfunction* fetchUserInfo() {\n  var r = yield get(\"v1/fetchUserInfo\").then(function (json) {\n    return put(fetchUserInfoSuccess(json));\n  })[\"catch\"](function (err) {\n    return put(fetchUserInfoFailure(err));\n  });\n  yield r;\n}\n\nexport default function* authSaga() {\n  yield takeLatest(VERIFY_TOKEN_REQUEST, verifyTokenRequest);\n  yield takeLatest(FETCH_USER_INFO_REQUEST, fetchUserInfo);\n}","map":null,"metadata":{},"sourceType":"module"}