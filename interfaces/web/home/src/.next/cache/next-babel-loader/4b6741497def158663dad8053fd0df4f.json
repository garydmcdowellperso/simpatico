{"ast":null,"code":"import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Avatar from '@material-ui/core/Avatar';\nimport Divider from \"@material-ui/core/Divider\";\nexport default function Main(props) {\n  var topPost = null;\n  var posts = props.posts,\n      title = props.title;\n\n  if (posts.length > 0) {\n    topPost = posts[posts.length - 1];\n  }\n\n  return React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 8\n  }, React.createElement(Typography, {\n    variant: \"h6\",\n    gutterBottom: true\n  }, title), topPost ? React.createElement(React.Fragment, null, React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"left\",\n    alignItems: \"center\"\n  }, React.createElement(\"a\", {\n    href: \"\"\n  }, React.createElement(Avatar, {\n    alt: topPost.user,\n    src: topPost.avatar\n  })), React.createElement(Typography, {\n    variant: \"subtitle2\",\n    gutterBottom: true\n  }, topPost.user, \" -  \", topPost.timestamp)), React.createElement(Divider, null), React.createElement(\"a\", {\n    href: \"\"\n  }, React.createElement(\"span\", {\n    dangerouslySetInnerHTML: {\n      __html: topPost.contents\n    }\n  }))) : null);\n}\nMain.propTypes = {\n  posts: PropTypes.array,\n  title: PropTypes.string\n};","map":{"version":3,"sources":["/Users/gary/dev/simpatico/interfaces/web/home/src/components/Main.jsx"],"names":["React","PropTypes","makeStyles","Grid","Typography","Avatar","Divider","Main","props","topPost","posts","title","length","user","avatar","timestamp","__html","contents","propTypes","array","string"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AAEA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAClC,MAAIC,OAAO,GAAG,IAAd;AADkC,MAG1BC,KAH0B,GAGTF,KAHS,CAG1BE,KAH0B;AAAA,MAGnBC,KAHmB,GAGTH,KAHS,CAGnBG,KAHmB;;AAKlC,MAAID,KAAK,CAACE,MAAN,GAAe,CAAnB,EAAsB;AACpBH,IAAAA,OAAO,GAAGC,KAAK,CAACA,KAAK,CAACE,MAAN,GAAa,CAAd,CAAf;AACD;;AAED,SACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,EAAE,EAAE;AAAvB,KACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,YAAY;AAArC,KACGD,KADH,CADF,EAIGF,OAAO,GAEN,0CACA,oBAAC,IAAD;AACE,IAAA,SAAS,MADX;AAEE,IAAA,SAAS,EAAC,KAFZ;AAGE,IAAA,OAAO,EAAC,MAHV;AAIE,IAAA,UAAU,EAAC;AAJb,KAME;AAAG,IAAA,IAAI,EAAC;AAAR,KAAW,oBAAC,MAAD;AAAQ,IAAA,GAAG,EAAEA,OAAO,CAACI,IAArB;AAA2B,IAAA,GAAG,EAAEJ,OAAO,CAACK;AAAxC,IAAX,CANF,EAOE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,WAApB;AAAgC,IAAA,YAAY;AAA5C,KACGL,OAAO,CAACI,IADX,UACqBJ,OAAO,CAACM,SAD7B,CAPF,CADA,EAYA,oBAAC,OAAD,OAZA,EAaA;AAAG,IAAA,IAAI,EAAC;AAAR,KACA;AAAM,IAAA,uBAAuB,EAAE;AAACC,MAAAA,MAAM,EAAEP,OAAO,CAACQ;AAAjB;AAA/B,IADA,CAbA,CAFM,GAoBL,IAxBL,CADF;AA6BD;AAEDV,IAAI,CAACW,SAAL,GAAiB;AACfR,EAAAA,KAAK,EAAET,SAAS,CAACkB,KADF;AAEfR,EAAAA,KAAK,EAAEV,SAAS,CAACmB;AAFF,CAAjB","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Avatar from '@material-ui/core/Avatar';\nimport Divider from \"@material-ui/core/Divider\";\n\nexport default function Main(props) {\n  let topPost = null;\n\n  const { posts, title } = props;\n\n  if (posts.length > 0) {\n    topPost = posts[posts.length-1];\n  }\n\n  return (\n    <Grid item xs={12} md={8}>\n      <Typography variant=\"h6\" gutterBottom>\n        {title}\n      </Typography>\n      {topPost ?\n        (\n        <>\n        <Grid\n          container\n          direction=\"row\"\n          justify=\"left\"\n          alignItems=\"center\"\n        >\n          <a href=\"\"><Avatar alt={topPost.user} src={topPost.avatar} /></a>\n          <Typography variant=\"subtitle2\" gutterBottom>\n            {topPost.user} -  {topPost.timestamp}\n          </Typography>\n        </Grid>\n        <Divider />\n        <a href=\"\">\n        <span dangerouslySetInnerHTML={{__html: topPost.contents}} />\n        </a>\n        </>\n        )\n       : null \n      }\n    </Grid>\n  );\n}\n\nMain.propTypes = {\n  posts: PropTypes.array,\n  title: PropTypes.string,\n};\n"]},"metadata":{},"sourceType":"module"}