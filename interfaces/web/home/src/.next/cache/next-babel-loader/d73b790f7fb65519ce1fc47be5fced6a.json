{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Link from \"@material-ui/core/Link\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchUserInfo } from \"../actions/auth\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    toolbar: {\n      borderBottom: \"1px solid \".concat(theme.palette.divider)\n    },\n    toolbarTitle: {\n      flex: 1\n    },\n    toolbarSecondary: {\n      justifyContent: \"space-between\",\n      overflowX: \"auto\"\n    },\n    toolbarLink: {\n      padding: theme.spacing(1),\n      flexShrink: 0\n    }\n  };\n});\nexport default function Header(props) {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      firstNameDisplay = _useState2[0],\n      setFirstNameDisplay = _useState2[1];\n\n  var classes = useStyles();\n  var sections = props.sections,\n      title = props.title;\n  var dispatch = useDispatch();\n  var firstNameLocalStorage;\n\n  var _useSelector = useSelector(function (state) {\n    return state.auth;\n  }),\n      isValidToken = _useSelector.isValidToken,\n      firstName = _useSelector.firstName;\n\n  console.log('isValidToken', isValidToken);\n  console.log('firstName', firstName);\n\n  if (false) {\n    // Server side rendering protection\n    firstNameLocalStorage = localStorage.getItem(\"firstName\");\n  } // First time effect\n\n\n  useEffect(function () {\n    console.log('**firstNameLocalStorage', firstNameLocalStorage);\n  }, []); // First time effect and when isValidToken changes\n\n  useEffect(function () {\n    if (isValidToken) {\n      // So the token is present and valid, do I have the user details?\n      if (!firstNameLocalStorage) {\n        dispatch(fetchUserInfo());\n      }\n    }\n  }, [isValidToken]);\n  useEffect(function () {\n    // Set localstorage for other apps but also update our local state to force render\n    localStorage.setItem(\"firstName\", firstName);\n    setFirstNameDisplay(firstName);\n  }, [firstName]);\n  return React.createElement(React.Fragment, null, React.createElement(Toolbar, {\n    className: classes.toolbar\n  }, React.createElement(Button, {\n    size: \"small\"\n  }, \"Subscribe\"), React.createElement(Typography, {\n    component: \"h2\",\n    variant: \"h5\",\n    color: \"inherit\",\n    align: \"center\",\n    noWrap: true,\n    className: classes.toolbarTitle\n  }, title), React.createElement(IconButton, null, React.createElement(SearchIcon, null)), React.createElement(Button, {\n    variant: \"outlined\",\n    size: \"small\",\n    onClick: function onClick() {\n      window.location = \"/connect/\";\n    }\n  }, firstNameDisplay || \"Sign up / Sign in\")), React.createElement(Toolbar, {\n    component: \"nav\",\n    variant: \"dense\",\n    className: classes.toolbarSecondary\n  }, sections.map(function (section) {\n    return React.createElement(Link, {\n      color: \"inherit\",\n      noWrap: true,\n      key: section.title,\n      variant: \"body2\",\n      href: section.url,\n      className: classes.toolbarLink\n    }, section.title);\n  })));\n}\nHeader.propTypes = {\n  sections: PropTypes.array,\n  title: PropTypes.string\n};","map":{"version":3,"sources":["/Users/gary/dev/simpatico/interfaces/web/home/src/components/Header.jsx"],"names":["React","useEffect","useState","PropTypes","makeStyles","Toolbar","Button","IconButton","SearchIcon","Typography","Link","useDispatch","useSelector","fetchUserInfo","useStyles","theme","toolbar","borderBottom","palette","divider","toolbarTitle","flex","toolbarSecondary","justifyContent","overflowX","toolbarLink","padding","spacing","flexShrink","Header","props","firstNameDisplay","setFirstNameDisplay","classes","sections","title","dispatch","firstNameLocalStorage","state","auth","isValidToken","firstName","console","log","localStorage","getItem","setItem","window","location","map","section","url","propTypes","array","string"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Link from \"@material-ui/core/Link\";\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { fetchUserInfo } from \"../actions/auth\";\n\nconst useStyles = makeStyles(theme => ({\n  toolbar: {\n    borderBottom: `1px solid ${theme.palette.divider}`\n  },\n  toolbarTitle: {\n    flex: 1\n  },\n  toolbarSecondary: {\n    justifyContent: \"space-between\",\n    overflowX: \"auto\"\n  },\n  toolbarLink: {\n    padding: theme.spacing(1),\n    flexShrink: 0\n  }\n}));\n\nexport default function Header(props) {\n  const [firstNameDisplay, setFirstNameDisplay] = useState();\n  const classes = useStyles();\n  const { sections, title } = props;\n  const dispatch = useDispatch();\n  let firstNameLocalStorage;\n\n  const { isValidToken, firstName } = useSelector(state => state.auth);\n  console.log('isValidToken', isValidToken)\n  console.log('firstName', firstName)\n\n  if (typeof window !== 'undefined') {\n    // Server side rendering protection\n    firstNameLocalStorage = localStorage.getItem(\"firstName\");\n  }\n  // First time effect\n  useEffect(() => {\n    console.log('**firstNameLocalStorage', firstNameLocalStorage)\n  }, []);\n\n\n  // First time effect and when isValidToken changes\n  useEffect(() => {\n   if (isValidToken) {\n     // So the token is present and valid, do I have the user details?\n     if (!firstNameLocalStorage) {\n       dispatch(fetchUserInfo());\n     }\n   }\n  }, [isValidToken]);\n\n  useEffect(() => {\n    // Set localstorage for other apps but also update our local state to force render\n    localStorage.setItem(\"firstName\", firstName);\n    setFirstNameDisplay(firstName);\n  }, [firstName]);\n\n  return (\n    <>\n      <Toolbar className={classes.toolbar}>\n        <Button size=\"small\">Subscribe</Button>\n        <Typography\n          component=\"h2\"\n          variant=\"h5\"\n          color=\"inherit\"\n          align=\"center\"\n          noWrap\n          className={classes.toolbarTitle}\n        >\n          {title}\n        </Typography>\n        <IconButton>\n          <SearchIcon />\n        </IconButton>\n        <Button\n          variant=\"outlined\"\n          size=\"small\"\n          onClick={() => {\n            window.location = \"/connect/\";\n          }}\n        >\n          {firstNameDisplay || `Sign up / Sign in`}\n        </Button>\n      </Toolbar>\n      <Toolbar\n        component=\"nav\"\n        variant=\"dense\"\n        className={classes.toolbarSecondary}\n      >\n        {sections.map(section => (\n          <Link\n            color=\"inherit\"\n            noWrap\n            key={section.title}\n            variant=\"body2\"\n            href={section.url}\n            className={classes.toolbarLink}\n          >\n            {section.title}\n          </Link>\n        ))}\n      </Toolbar>\n    </>\n  );\n}\n\nHeader.propTypes = {\n  sections: PropTypes.array,\n  title: PropTypes.string\n};\n"]},"metadata":{},"sourceType":"module"}