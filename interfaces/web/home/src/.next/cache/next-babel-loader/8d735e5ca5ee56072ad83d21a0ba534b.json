{"ast":null,"code":"import React, { useEffect } from \"react\";\nimport Head from 'next/head';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Container from \"@material-ui/core/Container\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Header from \"../components/Header\";\nimport Overview from \"../components/Overview\";\nimport Theme from \"../components/Theme\";\nimport Main from \"../components/Main\";\nimport Sidebar from \"../components/Sidebar\";\nimport Footer from \"../components/Footer\";\nimport nextI18NextInstance from '../../i18n';\nimport config from '../../config';\nimport { fetchDebateRequest } from '../actions/debate';\nimport { fetchPostsRequest } from '../actions/posts';\n\nvar getCurrentLang = function getCurrentLang() {\n  return nextI18NextInstance.i18n.language || 'en';\n};\n\nvar useStyles = makeStyles(function (theme) {\n  return {\n    mainGrid: {\n      marginTop: theme.spacing(3)\n    }\n  };\n});\n\nfunction Home(props) {\n  console.log('props', props);\n  var dispatch = useDispatch();\n  var debate = useSelector(function (state) {\n    return state.debate.debate;\n  });\n\n  var _useSelector = useSelector(function (state) {\n    return state.posts;\n  }),\n      posts = _useSelector.posts;\n\n  var isValidToken = useSelector(function (state) {\n    return state.auth.isValidToken;\n  });\n  useEffect(function () {\n    // Fire once, get page and debate\n    if (!debate) {\n      dispatch(fetchDebateRequest(window.location.hostname));\n    }\n\n    if (posts.length === 0) {\n      dispatch(fetchPostsRequest(localStorage.getItem(\"accountId\")));\n    }\n  }, []);\n  useEffect(function () {\n    if (debate && debate.debateType === 'private') {\n      if (!isValidToken) {\n        window.location.href = '/login/';\n      }\n    }\n  }, [isValidToken, debate]);\n  var classes = useStyles();\n\n  if (!debate) {\n    return React.createElement(\"div\", null);\n  }\n\n  return React.createElement(\"div\", null, React.createElement(Head, null, React.createElement(\"title\", null, debate.slug), React.createElement(\"meta\", {\n    name: \"viewport\",\n    content: \"initial-scale=1.0, width=device-width\"\n  }), debate.metaTags.map(function (tag, idx) {\n    if (tag.type === 'property') {\n      return React.createElement(\"meta\", {\n        property: tag.typevalue,\n        content: tag.content,\n        key: idx\n      });\n    } else {\n      return React.createElement(\"meta\", {\n        name: tag.typevalue,\n        content: tag.content,\n        key: idx\n      });\n    }\n  })), debate ? React.createElement(React.Fragment, null, React.createElement(CssBaseline, null), React.createElement(Container, {\n    maxWidth: \"lg\"\n  }, React.createElement(Header, {\n    selected: \"home\",\n    title: debate.slug,\n    header: debate.header\n  }), React.createElement(\"main\", null, React.createElement(Overview, {\n    data: debate.overview\n  }), React.createElement(Grid, {\n    container: true,\n    spacing: 4\n  }, debate.themes.map(function (theme) {\n    return React.createElement(Theme, {\n      key: theme.title[getCurrentLang()],\n      theme: theme\n    });\n  })), React.createElement(Grid, {\n    container: true,\n    spacing: 5,\n    className: classes.mainGrid\n  }, React.createElement(Main, {\n    title: \"Latest contributon\",\n    posts: posts\n  }), React.createElement(Sidebar, {\n    description: debate.sidebar.about[getCurrentLang()],\n    social: debate.sidebar.social\n  })))), React.createElement(Footer, {\n    footer: debate.footer\n  })) : null);\n} //Home.getInitialProps = async ctx => {\n//  if (ctx.req) {\n//    // Do a check if this debate exists before trying to render (no saga here, server side)\n//    const res = await fetch(`${config.api.host}/v1/fetchDebate?name=${ctx.req.headers.host}`)\n//    const debate = await res.json()\n//    return debate\n//  }\n//  return  null\n//}\n\n\nexport async function getServerSideProps(context) {\n  return {\n    props: {\n      debate: {\n        gary: 'hello'\n      }\n    } // will be passed to the page component as props\n\n  };\n}\nexport default Home;","map":{"version":3,"sources":["/Users/gary/dev/simpatico/interfaces/web/home/src/pages/index.jsx"],"names":["React","useEffect","Head","makeStyles","CssBaseline","Grid","Container","useDispatch","useSelector","Header","Overview","Theme","Main","Sidebar","Footer","nextI18NextInstance","config","fetchDebateRequest","fetchPostsRequest","getCurrentLang","i18n","language","useStyles","theme","mainGrid","marginTop","spacing","Home","props","console","log","dispatch","debate","state","posts","isValidToken","auth","window","location","hostname","length","localStorage","getItem","debateType","href","classes","slug","metaTags","map","tag","idx","type","typevalue","content","header","overview","themes","title","sidebar","about","social","footer","getServerSideProps","context","gary"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAGA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,mBAAP,MAAgC,YAAhC;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,SAASC,kBAAT,QAAmC,mBAAnC;AACA,SAASC,iBAAT,QAAkC,kBAAlC;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB;AAAA,SAAMJ,mBAAmB,CAACK,IAApB,CAAyBC,QAAzB,IAAqC,IAA3C;AAAA,CAAvB;;AAEA,IAAMC,SAAS,GAAGnB,UAAU,CAAC,UAAAoB,KAAK;AAAA,SAAK;AACrCC,IAAAA,QAAQ,EAAE;AACRC,MAAAA,SAAS,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd;AADH;AAD2B,GAAL;AAAA,CAAN,CAA5B;;AAMA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AACnBC,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAArB;AACA,MAAMG,QAAQ,GAAGxB,WAAW,EAA5B;AAEA,MAAMyB,MAAM,GAAGxB,WAAW,CAAC,UAAAyB,KAAK;AAAA,WAAIA,KAAK,CAACD,MAAN,CAAaA,MAAjB;AAAA,GAAN,CAA1B;;AAJmB,qBAKDxB,WAAW,CAAC,UAAAyB,KAAK;AAAA,WAAIA,KAAK,CAACC,KAAV;AAAA,GAAN,CALV;AAAA,MAKXA,KALW,gBAKXA,KALW;;AAMnB,MAAMC,YAAY,GAAG3B,WAAW,CAAC,UAAAyB,KAAK;AAAA,WAAIA,KAAK,CAACG,IAAN,CAAWD,YAAf;AAAA,GAAN,CAAhC;AAEAlC,EAAAA,SAAS,CAAC,YAAM;AAAE;AAChB,QAAI,CAAC+B,MAAL,EAAa;AACXD,MAAAA,QAAQ,CAACd,kBAAkB,CAACoB,MAAM,CAACC,QAAP,CAAgBC,QAAjB,CAAnB,CAAR;AACD;;AACD,QAAIL,KAAK,CAACM,MAAN,KAAiB,CAArB,EAAwB;AACtBT,MAAAA,QAAQ,CAACb,iBAAiB,CAACuB,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAD,CAAlB,CAAR;AACD;AACF,GAPQ,EAON,EAPM,CAAT;AASAzC,EAAAA,SAAS,CAAC,YAAM;AACd,QAAI+B,MAAM,IAAIA,MAAM,CAACW,UAAP,KAAsB,SAApC,EAA+C;AAC7C,UAAI,CAACR,YAAL,EAAmB;AACjBE,QAAAA,MAAM,CAACC,QAAP,CAAgBM,IAAhB,GAAuB,SAAvB;AACD;AACF;AACF,GANQ,EAMN,CAACT,YAAD,EAAeH,MAAf,CANM,CAAT;AASA,MAAMa,OAAO,GAAGvB,SAAS,EAAzB;;AAEA,MAAI,CAACU,MAAL,EAAa;AACX,WAAQ,gCAAR;AACD;;AAED,SACE,iCACE,oBAAC,IAAD,QACE,mCAAQA,MAAM,CAACc,IAAf,CADF,EAEE;AAAM,IAAA,IAAI,EAAC,UAAX;AAAsB,IAAA,OAAO,EAAC;AAA9B,IAFF,EAGGd,MAAM,CAACe,QAAP,CAAgBC,GAAhB,CAAoB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAE/B,QAAID,GAAG,CAACE,IAAJ,KAAa,UAAjB,EAA6B;AAC3B,aAAQ;AAAM,QAAA,QAAQ,EAAEF,GAAG,CAACG,SAApB;AAA+B,QAAA,OAAO,EAAEH,GAAG,CAACI,OAA5C;AAAqD,QAAA,GAAG,EAAEH;AAA1D,QAAR;AACD,KAFD,MAEQ;AACN,aAAQ;AAAM,QAAA,IAAI,EAAED,GAAG,CAACG,SAAhB;AAA2B,QAAA,OAAO,EAAEH,GAAG,CAACI,OAAxC;AAAiD,QAAA,GAAG,EAAEH;AAAtD,QAAR;AACD;AACJ,GAPA,CAHH,CADF,EAaGlB,MAAM,GACP,0CACE,oBAAC,WAAD,OADF,EAEE,oBAAC,SAAD;AAAW,IAAA,QAAQ,EAAC;AAApB,KACE,oBAAC,MAAD;AAAQ,IAAA,QAAQ,EAAC,MAAjB;AAAwB,IAAA,KAAK,EAAEA,MAAM,CAACc,IAAtC;AAA4C,IAAA,MAAM,EAAEd,MAAM,CAACsB;AAA3D,IADF,EAEE,kCACE,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEtB,MAAM,CAACuB;AAAvB,IADF,EAEE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE;AAAzB,KACGvB,MAAM,CAACwB,MAAP,CAAcR,GAAd,CAAkB,UAAAzB,KAAK;AAAA,WACtB,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAEA,KAAK,CAACkC,KAAN,CAAYtC,cAAc,EAA1B,CAAZ;AAA2C,MAAA,KAAK,EAAEI;AAAlD,MADsB;AAAA,GAAvB,CADH,CAFF,EAOE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAA4B,IAAA,SAAS,EAAEsB,OAAO,CAACrB;AAA/C,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAC,oBAAZ;AAAiC,IAAA,KAAK,EAAEU;AAAxC,IADF,EAEE,oBAAC,OAAD;AACE,IAAA,WAAW,EAAEF,MAAM,CAAC0B,OAAP,CAAeC,KAAf,CAAqBxC,cAAc,EAAnC,CADf;AAEE,IAAA,MAAM,EAAEa,MAAM,CAAC0B,OAAP,CAAeE;AAFzB,IAFF,CAPF,CAFF,CAFF,EAoBE,oBAAC,MAAD;AAAQ,IAAA,MAAM,EAAE5B,MAAM,CAAC6B;AAAvB,IApBF,CADO,GAsBA,IAnCT,CADF;AAuCD,C,CAED;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;;;AAEA,OAAO,eAAeC,kBAAf,CAAkCC,OAAlC,EAA2C;AAChD,SAAO;AACLnC,IAAAA,KAAK,EAAE;AACLI,MAAAA,MAAM,EAAE;AACNgC,QAAAA,IAAI,EAAE;AADA;AADH,KADF,CAKF;;AALE,GAAP;AAOD;AAED,eAAerC,IAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport Head from 'next/head'\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Container from \"@material-ui/core/Container\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\n\nimport Header from \"../components/Header\";\nimport Overview from \"../components/Overview\";\nimport Theme from \"../components/Theme\";\nimport Main from \"../components/Main\";\nimport Sidebar from \"../components/Sidebar\";\nimport Footer from \"../components/Footer\";\nimport nextI18NextInstance from '../../i18n';\nimport config from '../../config';\n\nimport { fetchDebateRequest } from '../actions/debate';\nimport { fetchPostsRequest } from '../actions/posts';\n\nconst getCurrentLang = () => nextI18NextInstance.i18n.language || 'en';\n\nconst useStyles = makeStyles(theme => ({\n  mainGrid: {\n    marginTop: theme.spacing(3)\n  },\n}));\n\nfunction Home(props) {\n  console.log('props', props)\n  const dispatch = useDispatch();\n\n  const debate = useSelector(state => state.debate.debate);\n  const { posts } = useSelector(state => state.posts);\n  const isValidToken = useSelector(state => state.auth.isValidToken);\n\n  useEffect(() => { // Fire once, get page and debate\n    if (!debate) {\n      dispatch(fetchDebateRequest(window.location.hostname));\n    }\n    if (posts.length === 0) {\n      dispatch(fetchPostsRequest(localStorage.getItem(\"accountId\")));\n    }\n  }, []);\n\n  useEffect(() => {\n    if (debate && debate.debateType === 'private') {\n      if (!isValidToken) {\n        window.location.href = '/login/';\n      }\n    }\n  }, [isValidToken, debate]);\n\n\n  const classes = useStyles();\n\n  if (!debate) {\n    return (<div/>)\n  }\n\n  return (\n    <div>\n      <Head>\n        <title>{debate.slug}</title>\n        <meta name=\"viewport\" content=\"initial-scale=1.0, width=device-width\" />\n        {debate.metaTags.map((tag, idx) => {\n\n            if (tag.type === 'property') {\n              return (<meta property={tag.typevalue} content={tag.content} key={idx} />)\n            } else  {\n              return (<meta name={tag.typevalue} content={tag.content} key={idx} />)\n            }\n        })}\n      </Head>\n      {debate ? (\n      <>\n        <CssBaseline />\n        <Container maxWidth=\"lg\">\n          <Header selected='home' title={debate.slug} header={debate.header} />\n          <main>\n            <Overview data={debate.overview} />\n            <Grid container spacing={4}>\n              {debate.themes.map(theme => (\n                <Theme key={theme.title[getCurrentLang()]} theme={theme} />\n              ))}\n            </Grid>\n            <Grid container spacing={5} className={classes.mainGrid}>\n              <Main title=\"Latest contributon\" posts={posts} />\n              <Sidebar\n                description={debate.sidebar.about[getCurrentLang()]}\n                social={debate.sidebar.social}\n              />\n            </Grid>\n          </main>\n        </Container>\n        <Footer footer={debate.footer} />\n      </>) : null }\n     </div>\n  );\n}\n\n//Home.getInitialProps = async ctx => {\n//  if (ctx.req) {\n//    // Do a check if this debate exists before trying to render (no saga here, server side)\n//    const res = await fetch(`${config.api.host}/v1/fetchDebate?name=${ctx.req.headers.host}`)\n//    const debate = await res.json()\n\n//    return debate\n//  }\n\n//  return  null\n//}\n\nexport async function getServerSideProps(context) {\n  return {\n    props: {\n      debate: {\n        gary: 'hello'\n      }\n    }, // will be passed to the page component as props\n  }\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}