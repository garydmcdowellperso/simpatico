{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport App from \"next/app\";\nimport React from \"react\";\nimport { applyMiddleware, createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport withRedux from \"next-redux-wrapper\";\nimport createSagaMiddleware from \"redux-saga\";\nimport fetch from 'isomorphic-unfetch';\nimport sagas from \"../sagas\";\nimport allReducers from \"../reducers\";\nimport { verifyTokenRequest } from \"../actions/auth\";\nimport '../styles.css';\nimport Custom404 from './404';\nvar sagaMiddleware = createSagaMiddleware();\nvar store;\n\nvar getUrlParameter = function getUrlParameter(name) {\n  name = name.replace(/[\\[]/, \"\\\\[\").replace(/[\\]]/, \"\\\\]\");\n  var regex = new RegExp(\"[\\\\?&]\".concat(name, \"=([^&#]*)\"));\n  var results = regex.exec(window.location.search);\n  return results === null ? \"\" : decodeURIComponent(results[1].replace(/\\+/g, \" \"));\n};\n\nvar makeStore = function makeStore(initialState) {\n  store = createStore(allReducers, initialState, applyMiddleware(sagaMiddleware));\n  sagaMiddleware.run(sagas);\n  return store;\n};\n\nvar Simpatico =\n/*#__PURE__*/\nfunction (_App) {\n  _inherits(Simpatico, _App);\n\n  function Simpatico() {\n    _classCallCheck(this, Simpatico);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Simpatico).apply(this, arguments));\n  }\n\n  _createClass(Simpatico, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // Check if token passed in - validate it and use the response to populate local storage\n      if (window.location.search.includes(\"token\")) {\n        // Ask server to verify and set cookie\n        store.dispatch(verifyTokenRequest({\n          token: getUrlParameter(\"token\")\n        }));\n      }\n\n      if (!window.location.search.includes(\"token\")) {\n        // Not on the URL so check the localStorage\n        if (localStorage.getItem(\"token\")) {\n          // Ask server to verify and set cookie\n          store.dispatch(verifyTokenRequest({\n            token: localStorage.getItem(\"token\")\n          }));\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          Component = _this$props.Component,\n          pageProps = _this$props.pageProps,\n          json = _this$props.json;\n      if (!json) return React.createElement(Custom404, null);\n      return React.createElement(Provider, {\n        store: store\n      }, React.createElement(Component, pageProps));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: async function getInitialProps(_ref) {\n      var Component = _ref.Component,\n          ctx = _ref.ctx,\n          req = _ref.req;\n      var pageProps = Component.getInitialProps ? await Component.getInitialProps(ctx) : {};\n      var parts = ctx.req.headers.host.split('.');\n      var name = '';\n\n      if (parts) {\n        name = parts[0];\n      } // Do a check if this debatee exists before trying to render (no saga here, server side)\n\n\n      var res = await fetch(\"https://buchy.eu/api/v1/fetchDebate?name=\".concat(name));\n      var json = await res.json();\n      console.log('json', json);\n      return {\n        pageProps: pageProps,\n        json: json\n      };\n    }\n  }]);\n\n  return Simpatico;\n}(App);\n\nexport default withRedux(makeStore)(Simpatico);","map":{"version":3,"sources":["/Users/gary/dev/simpatico/interfaces/web/home/src/pages/_app.jsx"],"names":["App","React","applyMiddleware","createStore","Provider","withRedux","createSagaMiddleware","fetch","sagas","allReducers","verifyTokenRequest","Custom404","sagaMiddleware","store","getUrlParameter","name","replace","regex","RegExp","results","exec","window","location","search","decodeURIComponent","makeStore","initialState","run","Simpatico","includes","dispatch","token","localStorage","getItem","props","Component","pageProps","json","ctx","req","getInitialProps","parts","headers","host","split","res","console","log"],"mappings":"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","sourcesContent":["import App from \"next/app\";\nimport React from \"react\";\nimport { applyMiddleware, createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport withRedux from \"next-redux-wrapper\";\nimport createSagaMiddleware from \"redux-saga\";\nimport fetch from 'isomorphic-unfetch';\n\nimport sagas from \"../sagas\";\nimport allReducers from \"../reducers\";\nimport { verifyTokenRequest } from \"../actions/auth\";\nimport '../styles.css'\nimport Custom404 from './404';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nlet store;\n\nconst getUrlParameter = name => {\n  name = name.replace(/[\\[]/, \"\\\\[\").replace(/[\\]]/, \"\\\\]\");\n  const regex = new RegExp(`[\\\\?&]${name}=([^&#]*)`);\n  const results = regex.exec(window.location.search);\n  return results === null\n    ? \"\"\n    : decodeURIComponent(results[1].replace(/\\+/g, \" \"));\n};\n\nconst makeStore = initialState => {\n  store = createStore(\n    allReducers,\n    initialState,\n    applyMiddleware(sagaMiddleware)\n  );\n  sagaMiddleware.run(sagas);\n\n  return store;\n};\n\nclass Simpatico extends App {\n  static async getInitialProps({ Component, ctx, req }) {\n    const pageProps = Component.getInitialProps\n      ? await Component.getInitialProps(ctx)\n      : {};\n\n    const parts = ctx.req.headers.host.split('.');\n    let name = '';\n\n    if (parts) {\n      name = parts[0];\n    }\n    // Do a check if this debatee exists before trying to render (no saga here, server side)\n    const res = await fetch(`https://buchy.eu/api/v1/fetchDebate?name=${name}`)\n    const json = await res.json()\n    console.log('json', json);\n    return { pageProps, json };\n  }\n\n  componentDidMount() {\n    // Check if token passed in - validate it and use the response to populate local storage\n    if (window.location.search.includes(\"token\")) {\n      // Ask server to verify and set cookie\n      store.dispatch(\n        verifyTokenRequest({\n          token: getUrlParameter(\"token\")\n        })\n      );\n    }\n\n    if (!window.location.search.includes(\"token\")) {\n      // Not on the URL so check the localStorage\n      if (localStorage.getItem(\"token\")) {\n        // Ask server to verify and set cookie\n        store.dispatch(\n          verifyTokenRequest({\n            token: localStorage.getItem(\"token\")\n          })\n        );\n      }\n    }\n  }\n\n  render() {\n    const { Component, pageProps, json } = this.props;\n\n    if (!json) return <Custom404 />;\n\n    return (\n      <Provider store={store}>\n        \n        <Component {...pageProps} />\n      </Provider>\n    );\n  }\n}\n\nexport default withRedux(makeStore)(Simpatico);\n"]},"metadata":{},"sourceType":"module"}