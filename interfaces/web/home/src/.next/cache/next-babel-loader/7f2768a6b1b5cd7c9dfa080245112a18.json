{"ast":null,"code":"import { takeLatest, put } from \"redux-saga/effects\";\nimport { FETCH_ALLDEBATES_REQUEST, fetchDebatesSuccess, fetchDebatesFailure, CREATE_DEBATE_REQUEST, createDebateSuccess, createDebateFailure, FETCH_DEBATE_REQUEST, fetchDebateSuccess, fetchDebateFailure, UPDATE_LANDING_PAGE_HEADER_REQUEST, updateLandingPageHeaderSuccess, updateLandingPageHeaderFailure, UPDATE_LANDING_PAGE_OVERVIEW_REQUEST, updateLandingPageOverviewSuccess, updateLandingPageOverviewFailure, UPDATE_LANDING_PAGE_THEMES_REQUEST, updateLandingPageThemesSuccess, updateLandingPageThemesFailure } from \"../actions/debate\";\nimport { get, post, putApi } from \"../lib/api\";\n\nfunction* fetchAllDebates() {\n  var r = yield get(\"v1/fetchAllDebates\").then(function (json) {\n    return put(fetchDebatesSuccess(json));\n  })[\"catch\"](function (err) {\n    return put(fetchDebatesFailure(err));\n  });\n  yield r;\n}\n\nfunction* fetchDebate(action) {\n  var r = yield get(\"v1/fetchDebate?name=\".concat(action.name)).then(function (json) {\n    return put(fetchDebateSuccess(json));\n  })[\"catch\"](function (err) {\n    return put(fetchDebateFailure(err));\n  });\n  yield r;\n}\n\nfunction* createDebate(action) {\n  var r = yield post(\"v1/createDebate\", JSON.stringify({\n    name: action.name,\n    slug: action.slug,\n    debateType: action.debateType,\n    languages: action.languages\n  })).then(function (json) {\n    return put(createDebateSuccess(json));\n  })[\"catch\"](function (err) {\n    return put(createDebateFailure(err));\n  });\n  yield r;\n}\n\nfunction* updateLandingPageHeader(action) {\n  var r = yield putApi(\"v1/updateLandingPageHeader\", JSON.stringify({\n    debateID: action.debateID,\n    header: action.header\n  })).then(function (json) {\n    return put(updateLandingPageHeaderSuccess(json));\n  })[\"catch\"](function (err) {\n    return put(updateLandingPageHeaderFailure(err));\n  });\n  yield r;\n}\n\nfunction* updateLandingPageOverview(action) {\n  var r = yield putApi(\"v1/updateLandingPageOverview\", JSON.stringify({\n    debateID: action.debateID,\n    overview: action.overview\n  })).then(function (json) {\n    return put(updateLandingPageOverviewSuccess(json));\n  })[\"catch\"](function (err) {\n    return put(updateLandingPageOverviewFailure(err));\n  });\n  yield r;\n}\n\nfunction* updateLandingPageThemes(action) {\n  var r = yield putApi(\"v1/updateLandingPageThemes\", JSON.stringify({\n    debateID: action.debateID,\n    themes: action.themes\n  })).then(function (json) {\n    return put(updateLandingPageThemesSuccess(json));\n  })[\"catch\"](function (err) {\n    return put(updateLandingPageThemesFailure(err));\n  });\n  yield r;\n}\n\nexport default function* authSaga() {\n  yield takeLatest(FETCH_DEBATE_REQUEST, fetchDebate);\n  yield takeLatest(FETCH_ALLDEBATES_REQUEST, fetchAllDebates);\n  yield takeLatest(CREATE_DEBATE_REQUEST, createDebate);\n  yield takeLatest(UPDATE_LANDING_PAGE_HEADER_REQUEST, updateLandingPageHeader);\n  yield takeLatest(UPDATE_LANDING_PAGE_OVERVIEW_REQUEST, updateLandingPageOverview);\n  yield takeLatest(UPDATE_LANDING_PAGE_THEMES_REQUEST, updateLandingPageThemes);\n}","map":null,"metadata":{},"sourceType":"module"}