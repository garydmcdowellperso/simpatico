{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { EmailIcon, EmailShareButton, FacebookIcon, FacebookShareButton, FacebookShareCount, FacebookMessengerShareButton, FacebookMessengerIcon, InstapaperShareButton, LineShareButton, LinkedinShareButton, LinkedinIcon, LivejournalShareButton, MailruShareButton, OKShareButton, PinterestShareButton, PocketShareButton, RedditShareButton, TelegramShareButton, TumblrShareButton, TwitterShareButton, TwitterIcon, ViberShareButton, VKShareButton, WhatsappShareButton, WhatsappIcon, WorkplaceShareButton } from \"react-share\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    network: {\n      \"verticalAlign\": \"top\",\n      \"display\": \"inline-block\",\n      \"margin-right\": \"10px\",\n      \"textAlign\": \"center\"\n    },\n    shareCount: {\n      \"display\": \"inline-flex\",\n      \"justifyContent\": \"center\",\n      \"whiteSpace\": \"nowrap\",\n      \"overflow\": \"visible\",\n      \"width\": 0,\n      \"marginTop\": \"3px\",\n      \"fontSize\": \"12px\",\n      \"fontColor\": \"black\"\n    },\n    networkShareButton: {\n      cursor: \"pointer\"\n    }\n  };\n});\nvar Transition = React.forwardRef(function Transition(props, ref) {\n  return React.createElement(Slide, _extends({\n    direction: \"up\",\n    ref: ref\n  }, props));\n});\nimport flowRight from 'lodash/flowRight';\nimport nextI18NextInstance from '../../i18n';\nvar withTranslation = nextI18NextInstance.withTranslation;\n\nvar getCurrentLang = function getCurrentLang() {\n  return nextI18NextInstance.i18n.language || 'en';\n};\n\nfunction Share(props) {\n  var open = props.open,\n      handleClose = props.handleClose,\n      t = props.t;\n  var classes = useStyles();\n  var shareUrl = window.location.href;\n  var title = \"Simpatico\";\n  return React.createElement(\"div\", null, React.createElement(Dialog, {\n    open: open,\n    TransitionComponent: Transition,\n    keepMounted: true,\n    onClose: handleClose,\n    \"aria-labelledby\": \"alert-dialog-slide-title\",\n    \"aria-describedby\": \"alert-dialog-slide-description\"\n  }, React.createElement(DialogTitle, {\n    id: \"alert-dialog-slide-title\"\n  }, t('share')), React.createElement(DialogContent, null, React.createElement(DialogContentText, {\n    id: \"alert-dialog-slide-description\"\n  }, React.createElement(\"div\", {\n    className: classes.network\n  }, React.createElement(FacebookShareButton, {\n    url: shareUrl,\n    quote: title,\n    className: classes.networkShareButton\n  }, React.createElement(FacebookIcon, {\n    size: 32,\n    round: true\n  })), React.createElement(\"div\", null, React.createElement(FacebookShareCount, {\n    url: shareUrl,\n    className: classes.shareCount\n  }, function (count) {\n    return count;\n  }))), React.createElement(\"div\", {\n    className: classes.network\n  }, React.createElement(FacebookMessengerShareButton, {\n    url: shareUrl,\n    appId: \"521270401588372\",\n    className: classes.networkShareButton\n  }, React.createElement(FacebookMessengerIcon, {\n    size: 32,\n    round: true\n  }))), React.createElement(\"div\", {\n    className: classes.network\n  }, React.createElement(TwitterShareButton, {\n    url: shareUrl,\n    title: title,\n    className: classes.networkShareButton\n  }, React.createElement(TwitterIcon, {\n    size: 32,\n    round: true\n  })), React.createElement(\"div\", {\n    className: classes.shareCount\n  }, \"\\xA0\")), React.createElement(\"div\", {\n    className: \"Demo__some-network\"\n  }, React.createElement(LinkedinShareButton, {\n    url: shareUrl,\n    className: classes.networkShareButton\n  }, React.createElement(LinkedinIcon, {\n    size: 32,\n    round: true\n  }))), React.createElement(\"div\", {\n    className: classes.network\n  }, React.createElement(WhatsappShareButton, {\n    url: shareUrl,\n    title: title,\n    separator: \":: \",\n    className: classes.networkShareButton\n  }, React.createElement(WhatsappIcon, {\n    size: 32,\n    round: true\n  })), React.createElement(\"div\", {\n    className: classes.shareCount\n  }, \"\\xA0\")), React.createElement(\"div\", {\n    className: classes.network\n  }, React.createElement(EmailShareButton, {\n    url: shareUrl,\n    subject: title,\n    body: \"body\",\n    className: classes.networkShareButton\n  }, React.createElement(EmailIcon, {\n    size: 32,\n    round: true\n  }))))), React.createElement(DialogActions, null, React.createElement(Button, {\n    onClick: handleClose,\n    color: \"primary\"\n  }, \"Close\"))));\n}\n\nexport default flowRight(withTranslation(['common']))(Share);","map":{"version":3,"sources":["/Users/gary/dev/simpatico/interfaces/web/home/src/components/Share.jsx"],"names":["React","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Slide","makeStyles","EmailIcon","EmailShareButton","FacebookIcon","FacebookShareButton","FacebookShareCount","FacebookMessengerShareButton","FacebookMessengerIcon","InstapaperShareButton","LineShareButton","LinkedinShareButton","LinkedinIcon","LivejournalShareButton","MailruShareButton","OKShareButton","PinterestShareButton","PocketShareButton","RedditShareButton","TelegramShareButton","TumblrShareButton","TwitterShareButton","TwitterIcon","ViberShareButton","VKShareButton","WhatsappShareButton","WhatsappIcon","WorkplaceShareButton","useStyles","theme","network","shareCount","networkShareButton","cursor","Transition","forwardRef","props","ref","flowRight","nextI18NextInstance","withTranslation","getCurrentLang","i18n","language","Share","open","handleClose","t","classes","shareUrl","window","location","href","title","count"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n    EmailIcon,\n    EmailShareButton,\n    FacebookIcon,\n    FacebookShareButton,\n    FacebookShareCount,\n    FacebookMessengerShareButton,\n    FacebookMessengerIcon,\n    InstapaperShareButton,\n    LineShareButton,\n    LinkedinShareButton,\n    LinkedinIcon,\n    LivejournalShareButton,\n    MailruShareButton,\n    OKShareButton,\n    PinterestShareButton,\n    PocketShareButton,\n    RedditShareButton,\n    TelegramShareButton,\n    TumblrShareButton,\n    TwitterShareButton,\n    TwitterIcon,\n    ViberShareButton,\n    VKShareButton,\n    WhatsappShareButton,\n    WhatsappIcon,\n    WorkplaceShareButton\n  } from \"react-share\";\n\n  const useStyles = makeStyles(theme => ({\n    network: {\n        \"verticalAlign\": \"top\",\n        \"display\": \"inline-block\",\n        \"margin-right\": \"10px\",\n        \"textAlign\": \"center\"\n    },\n    shareCount: {\n        \"display\": \"inline-flex\",\n        \"justifyContent\": \"center\",\n        \"whiteSpace\": \"nowrap\",\n        \"overflow\": \"visible\",\n        \"width\": 0,\n        \"marginTop\": \"3px\",\n        \"fontSize\": \"12px\",\n        \"fontColor\": \"black\"\n    },\n    networkShareButton: {\n        cursor: \"pointer\"\n    },\n  }));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nimport flowRight from 'lodash/flowRight';\n\nimport nextI18NextInstance from '../../i18n';\n\nconst { withTranslation } = nextI18NextInstance;\n\nconst getCurrentLang = () => nextI18NextInstance.i18n.language || 'en';\n\nfunction Share(props) {\n    const { open, handleClose, t } = props;\n  \n    const classes = useStyles();\n\n    const shareUrl = window.location.href;\n    const title = \"Simpatico\";\n\n    return (\n      <div>\n        <Dialog\n          open={open}\n          TransitionComponent={Transition}\n          keepMounted\n          onClose={handleClose}\n          aria-labelledby=\"alert-dialog-slide-title\"\n          aria-describedby=\"alert-dialog-slide-description\"\n        >\n          <DialogTitle id=\"alert-dialog-slide-title\">{t('share')}</DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-slide-description\">\n                <div className={classes.network}>\n                    <FacebookShareButton\n                        url={shareUrl}\n                        quote={title}\n                        className={classes.networkShareButton}\n                    >\n                        <FacebookIcon size={32} round />\n                    </FacebookShareButton>\n                    <div>\n                        <FacebookShareCount url={shareUrl} className={classes.shareCount}>\n                        {count => count}\n                        </FacebookShareCount>\n                    </div>\n                </div>\n                <div className={classes.network}>\n                    <FacebookMessengerShareButton\n                        url={shareUrl}\n                        appId=\"521270401588372\"\n                        className={classes.networkShareButton}\n                    >\n                        <FacebookMessengerIcon size={32} round />\n                    </FacebookMessengerShareButton>\n                </div>\n                <div className={classes.network}>\n                    <TwitterShareButton\n                        url={shareUrl}\n                        title={title}\n                        className={classes.networkShareButton}\n                    >\n                        <TwitterIcon size={32} round />\n                    </TwitterShareButton>\n\n                    <div className={classes.shareCount}>&nbsp;</div>\n                </div>\n                <div className=\"Demo__some-network\">\n                    <LinkedinShareButton url={shareUrl} className={classes.networkShareButton}>\n                        <LinkedinIcon size={32} round />\n                    </LinkedinShareButton>\n                </div>\n                <div className={classes.network}>\n                    <WhatsappShareButton\n                        url={shareUrl}\n                        title={title}\n                        separator=\":: \"\n                        className={classes.networkShareButton}\n                    >\n                        <WhatsappIcon size={32} round />\n                    </WhatsappShareButton>\n\n                    <div className={classes.shareCount}>&nbsp;</div>\n                </div>\n                <div className={classes.network}>\n                    <EmailShareButton\n                        url={shareUrl}\n                        subject={title}\n                        body=\"body\"\n                        className={classes.networkShareButton}\n                    >\n                        <EmailIcon size={32} round />\n                    </EmailShareButton>\n                </div>\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleClose} color=\"primary\">\n              Close\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n}\n\nexport default flowRight(\n    withTranslation(['common'])\n)(Share);"]},"metadata":{},"sourceType":"module"}