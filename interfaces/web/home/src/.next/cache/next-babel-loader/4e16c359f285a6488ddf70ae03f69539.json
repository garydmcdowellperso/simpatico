{"ast":null,"code":"import React, { useEffect } from \"react\";\nimport Head from 'next/head';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { HTMLRenderer } from \"@react-page/renderer\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Container from \"@material-ui/core/Container\";\nimport { useRouter } from 'next/router';\nimport Footer from \"../components/Footer\";\nimport \"@react-page/core/lib/index.css\"; // we also want to load the stylesheets\n\nimport \"@react-page/core/lib/index.css\"; // we also want to load the stylesheets\n// Require editor ui stylesheet\n\nimport \"@react-page/ui/lib/index.css\"; // Load some exemplary plugins:\n\nimport slate from \"@react-page/plugins-slate\"; // The rich text area plugin\n\nimport \"@react-page/plugins-slate/lib/index.css\"; // Stylesheets for the rich text area plugin\n\nimport background from \"@react-page/plugins-background\"; // A plugin for background images\n\nimport \"@react-page/plugins-background/lib/index.css\"; // Stylesheets for  background layout plugin\n\nimport image from \"@react-page/plugins-image\"; // A plugin for background images\n\nimport \"@react-page/plugins-image/lib/index.css\"; // Stylesheets for  background layout plugin\n\nimport video from \"@react-page/plugins-video\"; // A plugin for background images\n\nimport \"@react-page/plugins-video/lib/index.css\"; // Stylesheets for  background layout plugin\n\nimport spacer from \"@react-page/plugins-spacer\"; // A plugin for background images\n\nimport \"@react-page/plugins-spacer/lib/index.css\"; // Stylesheets for  background layout plugin\n\nimport Header from \"../components/Header\";\nimport { fetchPageRequest } from \"../actions/pages\";\nimport { fetchDebateRequest } from '../actions/debate';\nimport nextI18NextInstance from '../../i18n';\nimport config from '../../config';\nimport { get } from \"../lib/api\";\n\nvar getCurrentLang = function getCurrentLang() {\n  return nextI18NextInstance.i18n.language || 'en';\n};\n\nvar useStyles = makeStyles(function (theme) {\n  return {\n    mainGrid: {\n      marginTop: theme.spacing(3)\n    }\n  };\n});\nvar plugins = {\n  content: [slate(), image, spacer, video],\n  // Define plugins for content cells. To import multiple plugins, use [slate(), image, spacer, divider]\n  layout: [background({\n    defaultPlugin: slate()\n  })] // Define plugins for layout cells\n\n};\n\nfunction CMSPage(props) {\n  var router = useRouter();\n  var pageId = router.query.page;\n  var title = router.query.title;\n  var dispatch = useDispatch();\n  var page = useSelector(function (state) {\n    return state.pages.page;\n  });\n  var debate = useSelector(function (state) {\n    return state.debate.debate;\n  });\n  useEffect(function () {\n    // Fire once, get page and debate\n    dispatch(fetchPageRequest(pageId));\n    dispatch(fetchDebateRequest(window.location.hostname));\n  }, []);\n  var classes = useStyles();\n\n  if (!page || !debate) {\n    return React.createElement(\"div\", null);\n  }\n\n  return React.createElement(\"div\", null, React.createElement(Head, null, React.createElement(\"title\", null, debate.slug), React.createElement(\"meta\", {\n    name: \"viewport\",\n    content: \"initial-scale=1.0, width=device-width\"\n  })), React.createElement(React.Fragment, null, React.createElement(CssBaseline, null), React.createElement(Container, {\n    maxWidth: \"lg\"\n  }, React.createElement(Header, {\n    selected: title,\n    title: debate.slug,\n    header: debate.header\n  }), React.createElement(\"main\", null, React.createElement(HTMLRenderer, {\n    plugins: plugins,\n    state: page.languages[getCurrentLang()]\n  }))), React.createElement(Footer, {\n    selected: title,\n    footer: debate.footer\n  })));\n}\n\nexport async function getServerSideProps(ctx) {\n  // Fetch the page contents\n  var res = await fetch(\"\".concat(config.api.host, \"/v1/fetchPage?id=\").concat(ctx.query.page));\n  var page = await res.json(); // Do a check if this debatee exists before trying to render (no saga here, server side)\n\n  var res2 = await fetch(\"\".concat(config.api.host, \"/v1/fetchDebate?name=\").concat(ctx.req.headers.host));\n  var debate = await res2.json();\n  console.log('page', page);\n  console.log('debate', debate);\n  return {\n    props: {\n      page: page,\n      debate: debate\n    }\n  };\n}\nexport default CMSPage;","map":null,"metadata":{},"sourceType":"module"}