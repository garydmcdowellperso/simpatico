{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport App from \"next/app\";\nimport React from \"react\";\nimport { applyMiddleware, createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport withRedux from \"next-redux-wrapper\";\nimport createSagaMiddleware from \"redux-saga\";\nimport flowRight from 'lodash/flowRight';\nimport sagas from \"../sagas\";\nimport allReducers from \"../reducers\";\nimport { verifyTokenRequest, verifyTokenRequestFailure } from \"../actions/auth\";\nimport '../styles.css';\nimport i18n from '../../i18n';\nvar withTranslation = i18n.withTranslation;\nvar sagaMiddleware = createSagaMiddleware();\nvar store;\n\nvar getUrlParameter = function getUrlParameter(name) {\n  name = name.replace(/[\\[]/, \"\\\\[\").replace(/[\\]]/, \"\\\\]\");\n  var regex = new RegExp(\"[\\\\?&]\".concat(name, \"=([^&#]*)\"));\n  var results = regex.exec(window.location.search);\n  return results === null ? \"\" : decodeURIComponent(results[1].replace(/\\+/g, \" \"));\n};\n\nvar makeStore = function makeStore(initialState) {\n  store = createStore(allReducers, initialState, applyMiddleware(sagaMiddleware));\n  sagaMiddleware.run(sagas);\n  return store;\n};\n\nvar Simpatico =\n/*#__PURE__*/\nfunction (_App) {\n  _inherits(Simpatico, _App);\n\n  function Simpatico() {\n    _classCallCheck(this, Simpatico);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Simpatico).apply(this, arguments));\n  }\n\n  _createClass(Simpatico, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // Not on the URL so check the localStorage\n      if (localStorage.getItem(\"token\")) {\n        // Ask server to verify and set cookie\n        store.dispatch(verifyTokenRequest({\n          token: localStorage.getItem(\"token\"),\n          role: \"participant\"\n        }));\n      } else {\n        // No token, set to false rather than unknown\n        store.dispatch(verifyTokenRequestFailure('no valid token'));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          Component = _this$props.Component,\n          pageProps = _this$props.pageProps;\n      return React.createElement(Provider, {\n        store: store\n      }, React.createElement(Component, pageProps));\n    }\n  }]);\n\n  return Simpatico;\n}(App);\n\nvar appWithTranslation = i18n.appWithTranslation;\nexport default flowRight(withRedux(makeStore), appWithTranslation, withTranslation([\"common\"]))(Simpatico);","map":null,"metadata":{},"sourceType":"module"}