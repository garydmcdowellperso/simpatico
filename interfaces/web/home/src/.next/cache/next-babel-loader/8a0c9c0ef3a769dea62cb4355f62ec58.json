{"ast":null,"code":"import React, { useEffect } from \"react\";\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Hidden from '@material-ui/core/Hidden';\nimport Link from 'next/link';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchModuleRequest } from \"../actions/modules\";\nimport nextI18NextInstance from '../../i18n';\n\nvar getCurrentLang = function getCurrentLang() {\n  return nextI18NextInstance.i18n.language || 'en';\n};\n\nvar useStyles = makeStyles({\n  card: {\n    display: 'flex'\n  },\n  cardDetails: {\n    flex: 1\n  },\n  cardMedia: {\n    width: 160\n  }\n});\nexport default function Theme(props) {\n  var classes = useStyles();\n  var theme = props.theme;\n  var dispatch = useDispatch(); // First time effect\n\n  useEffect(function () {\n    // Pull info from local storage if available\n    if (theme && theme.module) {\n      dispatch(fetchModuleRequest(theme.module));\n    }\n  }, [theme]);\n\n  var _useSelector = useSelector(function (state) {\n    return state.modules;\n  }),\n      module = _useSelector.module;\n\n  return React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6\n  }, React.createElement(CardActionArea, {\n    component: \"a\",\n    href: theme.url\n  }, React.createElement(Card, {\n    className: classes.card\n  }, React.createElement(\"div\", {\n    className: classes.cardDetails\n  }, React.createElement(CardContent, null, React.createElement(Typography, {\n    component: \"h2\",\n    variant: \"h5\"\n  }, theme.title[getCurrentLang()]), React.createElement(Typography, {\n    variant: \"subtitle1\",\n    paragraph: true\n  }, theme.description[getCurrentLang()]), React.createElement(Typography, {\n    variant: \"subtitle1\",\n    color: \"primary\"\n  }, module && module.moduleType === 'thread' ? React.createElement(Link, {\n    href: '/thread/?module=' + module.id\n  }, theme.imageText[getCurrentLang()]) : null))), React.createElement(Hidden, {\n    xsDown: true\n  }, React.createElement(CardMedia, {\n    className: classes.cardMedia,\n    image: theme.image,\n    title: theme.imageText[getCurrentLang()]\n  })))));\n}\nTheme.propTypes = {\n  post: PropTypes.object\n};","map":{"version":3,"sources":["/Users/gary/dev/simpatico/interfaces/web/home/src/components/Theme.jsx"],"names":["React","useEffect","PropTypes","makeStyles","Typography","Grid","Card","CardActionArea","CardContent","CardMedia","Hidden","Link","useDispatch","useSelector","fetchModuleRequest","nextI18NextInstance","getCurrentLang","i18n","language","useStyles","card","display","cardDetails","flex","cardMedia","width","Theme","props","classes","theme","dispatch","module","state","modules","url","title","description","moduleType","id","imageText","image","propTypes","post","object"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Hidden from '@material-ui/core/Hidden';\nimport Link from 'next/link'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { fetchModuleRequest } from \"../actions/modules\";\n\nimport nextI18NextInstance from '../../i18n';\n\nconst getCurrentLang = () => nextI18NextInstance.i18n.language || 'en';\n\nconst useStyles = makeStyles({\n  card: {\n    display: 'flex',\n  },\n  cardDetails: {\n    flex: 1,\n  },\n  cardMedia: {\n    width: 160,\n  },\n});\n\nexport default function Theme(props) {\n  const classes = useStyles();\n  const { theme } = props;\n\n  const dispatch = useDispatch();\n\n  // First time effect\n  useEffect(() => {\n    // Pull info from local storage if available\n    if (theme && theme.module) {\n\n      dispatch(fetchModuleRequest(theme.module));\n    }\n  }, [theme]);\n\n  const { module } = useSelector(state => state.modules);\n\n  return (\n    <Grid item xs={12} md={6}>\n      <CardActionArea component=\"a\" href={theme.url}>\n        <Card className={classes.card}>\n          <div className={classes.cardDetails}>\n            <CardContent>\n              <Typography component=\"h2\" variant=\"h5\">\n                {theme.title[getCurrentLang()]}\n              </Typography>\n              <Typography variant=\"subtitle1\" paragraph>\n                {theme.description[getCurrentLang()]}\n              </Typography>\n              <Typography variant=\"subtitle1\" color=\"primary\">\n                {module && module.moduleType === 'thread' ?\n                  (<Link href={'/thread/?module=' + module.id}>\n                    {theme.imageText[getCurrentLang()]}\n                  </Link>) : null}\n              </Typography>\n            </CardContent>\n          </div>\n          <Hidden xsDown>\n            <CardMedia className={classes.cardMedia} image={theme.image} title={theme.imageText[getCurrentLang()]} />\n          </Hidden>\n        </Card>\n      </CardActionArea>\n    </Grid>\n  );\n}\n\nTheme.propTypes = {\n  post: PropTypes.object,\n};\n"]},"metadata":{},"sourceType":"module"}