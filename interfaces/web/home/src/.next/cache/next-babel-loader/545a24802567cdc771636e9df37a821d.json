{"ast":null,"code":"export var FETCH_ALLPAGES_REQUEST = \"FETCH_ALLPAGES_REQUEST\";\nexport var FETCH_ALLPAGES_SUCCESS = \"FETCH_ALLPAGES_SUCCESS\";\nexport var FETCH_ALLPAGES_FAILURE = \"FETCH_ALLPAGES_FAILURE\";\nexport var CREATE_PAGE_REQUEST = \"CREATE_PAGE_REQUEST\";\nexport var CREATE_PAGE_SUCCESS = \"CREATE_PAGE_SUCCESS\";\nexport var CREATE_PAGE_FAILURE = \"CREATE_PAGE_FAILURE\";\nexport var FETCH_PAGE_REQUEST = \"FETCH_PAGE_REQUEST\";\nexport var FETCH_PAGE_SUCCESS = \"FETCH_PAGE_SUCCESS\";\nexport var FETCH_PAGE_FAILURE = \"FETCH_PAGE_FAILURE\";\nexport var UPDATE_PAGE_REQUEST = \"UPDATE_PAGE_REQUEST\";\nexport var UPDATE_PAGE_SUCCESS = \"UPDATE_PAGE_SUCCESS\";\nexport var UPDATE_PAGE_FAILURE = \"UPDATE_PAGE_FAILURE\";\nexport function fetchAllPagesRequest() {\n  return {\n    type: FETCH_ALLPAGES_REQUEST\n  };\n}\nexport function fetchAllPagesSuccess(pages) {\n  return {\n    type: FETCH_ALLPAGES_SUCCESS,\n    pages: pages\n  };\n}\nexport function fetchAllPagesFailure(error) {\n  return {\n    type: FETCH_ALLPAGES_FAILURE,\n    error: error\n  };\n}\nexport function createPageRequest(name, debateId, pageType, url, languages) {\n  return {\n    type: CREATE_PAGE_REQUEST,\n    name: name,\n    debateId: debateId,\n    pageType: pageType,\n    url: url,\n    languages: languages\n  };\n}\nexport function createPageSuccess(pages) {\n  return {\n    type: CREATE_PAGE_SUCCESS,\n    pages: pages\n  };\n}\nexport function createPageFailure(error) {\n  return {\n    type: CREATE_PAGE_FAILURE,\n    error: error\n  };\n}\nexport function fetchPageRequest(id) {\n  return {\n    type: FETCH_PAGE_REQUEST,\n    id: id\n  };\n}\nexport function fetchPageSuccess(page) {\n  return {\n    type: FETCH_PAGE_SUCCESS,\n    page: page\n  };\n}\nexport function fetchPageFailure(error) {\n  return {\n    type: FETCH_PAGE_FAILURE,\n    error: error\n  };\n}\nexport function updatePageRequest(name, id, pageType, url, languages) {\n  return {\n    type: UPDATE_PAGE_REQUEST,\n    name: name,\n    id: id,\n    pageType: pageType,\n    url: url,\n    languages: languages\n  };\n}\nexport function updatePageSuccess(page) {\n  return {\n    type: UPDATE_PAGE_SUCCESS,\n    page: page\n  };\n}\nexport function updatePageFailure(error) {\n  return {\n    type: UPDATE_PAGE_FAILURE,\n    error: error\n  };\n}","map":{"version":3,"sources":["/Users/gary/dev/simpatico/interfaces/web/home/src/actions/pages.js"],"names":["FETCH_ALLPAGES_REQUEST","FETCH_ALLPAGES_SUCCESS","FETCH_ALLPAGES_FAILURE","CREATE_PAGE_REQUEST","CREATE_PAGE_SUCCESS","CREATE_PAGE_FAILURE","FETCH_PAGE_REQUEST","FETCH_PAGE_SUCCESS","FETCH_PAGE_FAILURE","UPDATE_PAGE_REQUEST","UPDATE_PAGE_SUCCESS","UPDATE_PAGE_FAILURE","fetchAllPagesRequest","type","fetchAllPagesSuccess","pages","fetchAllPagesFailure","error","createPageRequest","name","debateId","pageType","url","languages","createPageSuccess","createPageFailure","fetchPageRequest","id","fetchPageSuccess","page","fetchPageFailure","updatePageRequest","updatePageSuccess","updatePageFailure"],"mappings":"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","sourcesContent":["export const FETCH_ALLPAGES_REQUEST = \"FETCH_ALLPAGES_REQUEST\";\nexport const FETCH_ALLPAGES_SUCCESS = \"FETCH_ALLPAGES_SUCCESS\";\nexport const FETCH_ALLPAGES_FAILURE = \"FETCH_ALLPAGES_FAILURE\";\n\nexport const CREATE_PAGE_REQUEST = \"CREATE_PAGE_REQUEST\";\nexport const CREATE_PAGE_SUCCESS = \"CREATE_PAGE_SUCCESS\";\nexport const CREATE_PAGE_FAILURE = \"CREATE_PAGE_FAILURE\";\n\nexport const FETCH_PAGE_REQUEST = \"FETCH_PAGE_REQUEST\";\nexport const FETCH_PAGE_SUCCESS = \"FETCH_PAGE_SUCCESS\";\nexport const FETCH_PAGE_FAILURE = \"FETCH_PAGE_FAILURE\";\n\nexport const UPDATE_PAGE_REQUEST = \"UPDATE_PAGE_REQUEST\";\nexport const UPDATE_PAGE_SUCCESS = \"UPDATE_PAGE_SUCCESS\";\nexport const UPDATE_PAGE_FAILURE = \"UPDATE_PAGE_FAILURE\";\n\nexport function fetchAllPagesRequest() {\n  return {\n    type: FETCH_ALLPAGES_REQUEST\n  };\n}\n\nexport function fetchAllPagesSuccess(pages) {\n  return {\n    type: FETCH_ALLPAGES_SUCCESS,\n    pages\n  };\n}\n\nexport function fetchAllPagesFailure(error) {\n  return {\n    type: FETCH_ALLPAGES_FAILURE,\n    error\n  };\n}\n\nexport function createPageRequest(name, debateId, pageType, url, languages) {\n  return {\n    type: CREATE_PAGE_REQUEST,\n    name,\n    debateId,\n    pageType,\n    url,\n    languages\n  };\n}\n\nexport function createPageSuccess(pages) {\n  return {\n    type: CREATE_PAGE_SUCCESS,\n    pages\n  };\n}\n\nexport function createPageFailure(error) {\n  return {\n    type: CREATE_PAGE_FAILURE,\n    error\n  };\n}\n\nexport function fetchPageRequest(id) {\n  return {\n    type: FETCH_PAGE_REQUEST,\n    id\n  };\n}\n\nexport function fetchPageSuccess(page) {\n  return {\n    type: FETCH_PAGE_SUCCESS,\n    page\n  };\n}\n\nexport function fetchPageFailure(error) {\n  return {\n    type: FETCH_PAGE_FAILURE,\n    error\n  };\n}\n\nexport function updatePageRequest(name, id, pageType, url, languages) {\n  return {\n    type: UPDATE_PAGE_REQUEST,\n    name,\n    id,\n    pageType,\n    url,\n    languages\n  };\n}\n\nexport function updatePageSuccess(page) {\n  return {\n    type: UPDATE_PAGE_SUCCESS,\n    page\n  };\n}\n\nexport function updatePageFailure(error) {\n  return {\n    type: UPDATE_PAGE_FAILURE,\n    error\n  };\n}"]},"metadata":{},"sourceType":"module"}