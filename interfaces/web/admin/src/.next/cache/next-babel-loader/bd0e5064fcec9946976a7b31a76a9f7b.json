{"ast":null,"code":"import { takeLatest, put } from \"redux-saga/effects\";\nimport { VERIFY_TOKEN_REQUEST, verifyTokenRequestSuccess, verifyTokenRequestFailure, FETCH_USER_INFO_REQUEST, fetchUserInfoSuccess, fetchUserInfoFailure } from \"../actions/auth\";\nimport { get, post } from \"../lib/api\";\n\nfunction* verifyTokenRequest(action) {\n  var r = yield post(\"v1/verifyToken\", JSON.stringify({\n    token: action.token\n  })).then(function (json) {\n    return put(verifyTokenRequestSuccess(json));\n  })[\"catch\"](function (err) {\n    return put(verifyTokenRequestFailure(err));\n  });\n  yield r;\n}\n\nfunction* fetchUserInfo() {\n  var r = yield get(\"v1/fetchUserInfo\").then(function (json) {\n    return put(fetchUserInfoSuccess(json));\n  })[\"catch\"](function (err) {\n    return put(fetchUserInfoFailure(err));\n  });\n  yield r;\n}\n\nexport default function* authSaga() {\n  yield takeLatest(VERIFY_TOKEN_REQUEST, verifyTokenRequest);\n  yield takeLatest(FETCH_USER_INFO_REQUEST, fetchUserInfo);\n}","map":{"version":3,"sources":["/Users/gary/dev/simpatico/interfaces/web/admin/src/sagas/auth.js"],"names":["takeLatest","put","VERIFY_TOKEN_REQUEST","verifyTokenRequestSuccess","verifyTokenRequestFailure","FETCH_USER_INFO_REQUEST","fetchUserInfoSuccess","fetchUserInfoFailure","get","post","verifyTokenRequest","action","r","JSON","stringify","token","then","json","err","fetchUserInfo","authSaga"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,QAAgC,oBAAhC;AACA,SACEC,oBADF,EAEEC,yBAFF,EAGEC,yBAHF,EAIEC,uBAJF,EAKEC,oBALF,EAMEC,oBANF,QAOO,iBAPP;AAQA,SAASC,GAAT,EAAcC,IAAd,QAA0B,YAA1B;;AAEA,UAAUC,kBAAV,CAA6BC,MAA7B,EAAqC;AACnC,MAAMC,CAAC,GAAG,MAAMH,IAAI,CAClB,gBADkB,EAElBI,IAAI,CAACC,SAAL,CAAe;AACbC,IAAAA,KAAK,EAAEJ,MAAM,CAACI;AADD,GAAf,CAFkB,CAAJ,CAMbC,IANa,CAMR,UAAAC,IAAI;AAAA,WAAIhB,GAAG,CAACE,yBAAyB,CAACc,IAAD,CAA1B,CAAP;AAAA,GANI,WAOP,UAAAC,GAAG;AAAA,WAAIjB,GAAG,CAACG,yBAAyB,CAACc,GAAD,CAA1B,CAAP;AAAA,GAPI,CAAhB;AAQA,QAAMN,CAAN;AACD;;AAED,UAAUO,aAAV,GAA0B;AACxB,MAAMP,CAAC,GAAG,MAAMJ,GAAG,CAAC,kBAAD,CAAH,CACbQ,IADa,CACR,UAAAC,IAAI;AAAA,WAAIhB,GAAG,CAACK,oBAAoB,CAACW,IAAD,CAArB,CAAP;AAAA,GADI,WAEP,UAAAC,GAAG;AAAA,WAAIjB,GAAG,CAACM,oBAAoB,CAACW,GAAD,CAArB,CAAP;AAAA,GAFI,CAAhB;AAGA,QAAMN,CAAN;AACD;;AAED,eAAe,UAAUQ,QAAV,GAAqB;AAClC,QAAMpB,UAAU,CAACE,oBAAD,EAAuBQ,kBAAvB,CAAhB;AACA,QAAMV,UAAU,CAACK,uBAAD,EAA0Bc,aAA1B,CAAhB;AACD","sourcesContent":["import { takeLatest, put } from \"redux-saga/effects\";\nimport {\n  VERIFY_TOKEN_REQUEST,\n  verifyTokenRequestSuccess,\n  verifyTokenRequestFailure,\n  FETCH_USER_INFO_REQUEST,\n  fetchUserInfoSuccess,\n  fetchUserInfoFailure\n} from \"../actions/auth\";\nimport { get, post } from \"../lib/api\";\n\nfunction* verifyTokenRequest(action) {\n  const r = yield post(\n    \"v1/verifyToken\",\n    JSON.stringify({\n      token: action.token\n    })\n  )\n    .then(json => put(verifyTokenRequestSuccess(json)))\n    .catch(err => put(verifyTokenRequestFailure(err)));\n  yield r;\n}\n\nfunction* fetchUserInfo() {\n  const r = yield get(\"v1/fetchUserInfo\")\n    .then(json => put(fetchUserInfoSuccess(json)))\n    .catch(err => put(fetchUserInfoFailure(err)));\n  yield r;\n}\n\nexport default function* authSaga() {\n  yield takeLatest(VERIFY_TOKEN_REQUEST, verifyTokenRequest);\n  yield takeLatest(FETCH_USER_INFO_REQUEST, fetchUserInfo);\n}\n"]},"metadata":{},"sourceType":"module"}