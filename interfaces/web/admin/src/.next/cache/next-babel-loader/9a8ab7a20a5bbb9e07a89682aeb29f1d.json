{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Link from \"@material-ui/core/Link\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport UserMenu from \"./UserMenu\";\nimport { fetchUserInfo } from \"../actions/auth\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    toolbar: {\n      borderBottom: \"1px solid \".concat(theme.palette.divider)\n    },\n    toolbarTitle: {\n      flex: 1\n    },\n    toolbarSecondary: {\n      justifyContent: \"space-around\",\n      width: \"80%\",\n      overflowX: \"auto\"\n    },\n    toolbarLink: {\n      padding: theme.spacing(1),\n      flexShrink: 0\n    }\n  };\n});\nexport default function Header(props) {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      firstNameDisplay = _useState2[0],\n      setFirstNameDisplay = _useState2[1];\n\n  var classes = useStyles();\n  var sections = props.sections,\n      title = props.title;\n  var dispatch = useDispatch();\n  var firstNameLocalStorage;\n\n  var _useSelector = useSelector(function (state) {\n    return state.auth;\n  }),\n      isValidToken = _useSelector.isValidToken,\n      firstName = _useSelector.firstName;\n\n  if (false) {\n    // Server side rendering protection\n    firstNameLocalStorage = localStorage.getItem(\"firstName\");\n  } // First time effect\n\n\n  useEffect(function () {\n    // Pull info from local storage if available\n    if (firstNameLocalStorage) {\n      setFirstNameDisplay(firstNameLocalStorage);\n    }\n  }, []); // First time effect and when isValidToken changes\n\n  useEffect(function () {\n    if (isValidToken) {\n      // So the token is present and valid, do I have the user details?\n      if (!firstNameLocalStorage) {\n        dispatch(fetchUserInfo());\n      }\n    } // Sorry token no longer valid, get rid of display name for login\n\n\n    if (isValidToken) {\n      setFirstNameDisplay();\n    }\n  }, [isValidToken]);\n  useEffect(function () {\n    // Set localstorage for other apps but also update our local state to force render\n    localStorage.setItem(\"firstName\", firstName);\n    setFirstNameDisplay(firstName);\n  }, [firstName]);\n  return React.createElement(React.Fragment, null, React.createElement(Toolbar, {\n    className: classes.toolbar\n  }, React.createElement(Button, {\n    size: \"small\"\n  }, \"Share\"), React.createElement(Typography, {\n    component: \"h2\",\n    variant: \"h5\",\n    color: \"inherit\",\n    align: \"center\",\n    noWrap: true,\n    className: classes.toolbarTitle\n  }, title), React.createElement(IconButton, null, React.createElement(SearchIcon, null)), !firstNameDisplay ? React.createElement(Button, {\n    variant: \"outlined\",\n    size: \"small\",\n    onClick: function onClick() {\n      window.location = \"/connect/\";\n    }\n  }, \"Sign up / Sign in\") : React.createElement(UserMenu, {\n    firstNameDisplay: firstNameDisplay\n  })), React.createElement(Toolbar, {\n    component: \"nav\",\n    variant: \"dense\",\n    className: classes.toolbarSecondary\n  }, sections.map(function (section) {\n    return React.createElement(Link, {\n      color: \"inherit\",\n      noWrap: true,\n      key: section.title,\n      variant: \"body2\",\n      href: section.url,\n      className: classes.toolbarLink\n    }, section.title);\n  })));\n}\nHeader.propTypes = {\n  sections: PropTypes.array,\n  title: PropTypes.string\n};","map":null,"metadata":{},"sourceType":"module"}