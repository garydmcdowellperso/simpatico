{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Row, Col, FormSelect, Card, CardHeader, CardBody, CardFooter } from \"shards-react\";\nimport Chart from \"../../utils/chart\";\n\nvar UsersByDevice =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(UsersByDevice, _React$Component);\n\n  function UsersByDevice(props) {\n    var _this;\n\n    _classCallCheck(this, UsersByDevice);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UsersByDevice).call(this, props));\n    _this.canvasRef = React.createRef();\n    return _this;\n  }\n\n  _createClass(UsersByDevice, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var chartConfig = {\n        type: \"pie\",\n        data: this.props.chartData,\n        options: _objectSpread({}, {\n          legend: {\n            position: \"bottom\",\n            labels: {\n              padding: 25,\n              boxWidth: 20\n            }\n          },\n          cutoutPercentage: 0,\n          tooltips: {\n            custom: false,\n            mode: \"index\",\n            position: \"nearest\"\n          }\n        }, {}, this.props.chartOptions)\n      };\n      new Chart(this.canvasRef.current, chartConfig);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var title = this.props.title;\n      return React.createElement(Card, {\n        small: true,\n        className: \"h-100\"\n      }, React.createElement(CardHeader, {\n        className: \"border-bottom\"\n      }, React.createElement(\"h6\", {\n        className: \"m-0\"\n      }, title)), React.createElement(CardBody, {\n        className: \"d-flex py-0\"\n      }, React.createElement(\"canvas\", {\n        height: \"220\",\n        ref: this.canvasRef,\n        className: \"blog-users-by-device m-auto\"\n      })), React.createElement(CardFooter, {\n        className: \"border-top\"\n      }, React.createElement(Row, null, React.createElement(Col, null, React.createElement(FormSelect, {\n        size: \"sm\",\n        value: \"last-week\",\n        style: {\n          maxWidth: \"130px\"\n        },\n        onChange: function onChange() {}\n      }, React.createElement(\"option\", {\n        value: \"last-week\"\n      }, \"Last Week\"), React.createElement(\"option\", {\n        value: \"today\"\n      }, \"Today\"), React.createElement(\"option\", {\n        value: \"last-month\"\n      }, \"Last Month\"), React.createElement(\"option\", {\n        value: \"last-year\"\n      }, \"Last Year\"))), React.createElement(Col, {\n        className: \"text-right view-report\"\n      }, React.createElement(\"a\", {\n        href: \"#\"\n      }, \"View full report \\u2192\")))));\n    }\n  }]);\n\n  return UsersByDevice;\n}(React.Component);\n\nUsersByDevice.propTypes = {\n  /**\n   * The component's title.\n   */\n  title: PropTypes.string,\n\n  /**\n   * The chart config object.\n   */\n  chartConfig: PropTypes.object,\n\n  /**\n   * The Chart.js options.\n   */\n  chartOptions: PropTypes.object,\n\n  /**\n   * The chart data.\n   */\n  chartData: PropTypes.object\n};\nUsersByDevice.defaultProps = {\n  title: \"Users by device\",\n  chartData: {\n    datasets: [{\n      hoverBorderColor: \"#ffffff\",\n      data: [68.3, 24.2, 7.5],\n      backgroundColor: [\"rgba(0,123,255,0.9)\", \"rgba(0,123,255,0.5)\", \"rgba(0,123,255,0.3)\"]\n    }],\n    labels: [\"Desktop\", \"Tablet\", \"Mobile\"]\n  }\n};\nexport default UsersByDevice;","map":{"version":3,"sources":["/Users/gary/dev/simpatico/interfaces/web/admin/src/components/blog/UsersByDevice.js"],"names":["React","PropTypes","Row","Col","FormSelect","Card","CardHeader","CardBody","CardFooter","Chart","UsersByDevice","props","canvasRef","createRef","chartConfig","type","data","chartData","options","legend","position","labels","padding","boxWidth","cutoutPercentage","tooltips","custom","mode","chartOptions","current","title","maxWidth","Component","propTypes","string","object","defaultProps","datasets","hoverBorderColor","backgroundColor"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Row,\n  Col,\n  FormSelect,\n  Card,\n  CardHeader,\n  CardBody,\n  CardFooter\n} from \"shards-react\";\n\nimport Chart from \"../../utils/chart\";\n\nclass UsersByDevice extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const chartConfig = {\n      type: \"pie\",\n      data: this.props.chartData,\n      options: {\n        ...{\n          legend: {\n            position: \"bottom\",\n            labels: {\n              padding: 25,\n              boxWidth: 20\n            }\n          },\n          cutoutPercentage: 0,\n          tooltips: {\n            custom: false,\n            mode: \"index\",\n            position: \"nearest\"\n          }\n        },\n        ...this.props.chartOptions\n      }\n    };\n\n    new Chart(this.canvasRef.current, chartConfig);\n  }\n\n  render() {\n    const { title } = this.props;\n    return (\n      <Card small className=\"h-100\">\n        <CardHeader className=\"border-bottom\">\n          <h6 className=\"m-0\">{title}</h6>\n        </CardHeader>\n        <CardBody className=\"d-flex py-0\">\n          <canvas\n            height=\"220\"\n            ref={this.canvasRef}\n            className=\"blog-users-by-device m-auto\"\n          />\n        </CardBody>\n        <CardFooter className=\"border-top\">\n          <Row>\n            <Col>\n              <FormSelect\n                size=\"sm\"\n                value=\"last-week\"\n                style={{ maxWidth: \"130px\" }}\n                onChange={() => {}}\n              >\n                <option value=\"last-week\">Last Week</option>\n                <option value=\"today\">Today</option>\n                <option value=\"last-month\">Last Month</option>\n                <option value=\"last-year\">Last Year</option>\n              </FormSelect>\n            </Col>\n            <Col className=\"text-right view-report\">\n              {/* eslint-disable-next-line */}\n              <a href=\"#\">View full report &rarr;</a>\n            </Col>\n          </Row>\n        </CardFooter>\n      </Card>\n    );\n  }\n}\n\nUsersByDevice.propTypes = {\n  /**\n   * The component's title.\n   */\n  title: PropTypes.string,\n  /**\n   * The chart config object.\n   */\n  chartConfig: PropTypes.object,\n  /**\n   * The Chart.js options.\n   */\n  chartOptions: PropTypes.object,\n  /**\n   * The chart data.\n   */\n  chartData: PropTypes.object\n};\n\nUsersByDevice.defaultProps = {\n  title: \"Users by device\",\n  chartData: {\n    datasets: [\n      {\n        hoverBorderColor: \"#ffffff\",\n        data: [68.3, 24.2, 7.5],\n        backgroundColor: [\n          \"rgba(0,123,255,0.9)\",\n          \"rgba(0,123,255,0.5)\",\n          \"rgba(0,123,255,0.3)\"\n        ]\n      }\n    ],\n    labels: [\"Desktop\", \"Tablet\", \"Mobile\"]\n  }\n};\n\nexport default UsersByDevice;\n"]},"metadata":{},"sourceType":"module"}