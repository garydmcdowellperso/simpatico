{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport fetch from 'isomorphic-unfetch';\nvar store;\nexport var callApi = function callApi(route, method, body, options) {\n  options = _objectSpread({\n    method: method,\n    body: body,\n    headers: {}\n  }, options);\n  options.headers[\"Content-Type\"] = \"application/json; charset=UTF-8\";\n  return fetch(\"/api/\".concat(route), options).then(function (response) {\n    if (!response.ok) {\n      if (response.status === 401 || response.status === 403) {// Log the user out\n      }\n\n      if (response.status === 400) {\n        return response.json().then(function (error) {\n          throw new Error(error.response);\n        });\n      }\n    }\n\n    return response.json();\n  });\n};\nexport var get = function get(route, options) {\n  return callApi(route, \"GET\", undefined, options);\n};\nexport var post = function post(route, body, options) {\n  return callApi(route, \"POST\", body, options);\n};\nexport var putApi = function putApi(route, body, options) {\n  return callApi(route, \"PUT\", body, options);\n};\nexport var remove = function remove(route, body, options) {\n  return callApi(route, \"DELETE\", body, options);\n};\nexport var init = function init(_store) {\n  store = _store;\n};\nvar Api = {\n  get: get,\n  post: post,\n  putApi: putApi,\n  remove: remove,\n  callApi: callApi,\n  init: init\n};\nexport default Api;","map":null,"metadata":{},"sourceType":"module"}