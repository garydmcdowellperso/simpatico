{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Markdown from \"./Markdown\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    markdown: _objectSpread({}, theme.typography.body2, {\n      padding: theme.spacing(3, 0)\n    })\n  };\n});\nexport default function Main(props) {\n  var classes = useStyles();\n  var posts = props.posts,\n      title = props.title;\n  return React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 8\n  }, React.createElement(Typography, {\n    variant: \"h6\",\n    gutterBottom: true\n  }, title), React.createElement(Divider, null), posts.map(function (post) {\n    return React.createElement(Markdown, {\n      className: classes.markdown,\n      key: post.substring(0, 40)\n    }, post);\n  }));\n}\nMain.propTypes = {\n  posts: PropTypes.array,\n  title: PropTypes.string\n};","map":{"version":3,"sources":["/Users/gary/dev/simpatico/interfaces/web/admin/src/components/Main.jsx"],"names":["React","PropTypes","makeStyles","Grid","Typography","Divider","Markdown","useStyles","theme","markdown","typography","body2","padding","spacing","Main","props","classes","posts","title","map","post","substring","propTypes","array","string"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,IAAMC,SAAS,GAAGL,UAAU,CAAC,UAAAM,KAAK;AAAA,SAAK;AACrCC,IAAAA,QAAQ,oBACHD,KAAK,CAACE,UAAN,CAAiBC,KADd;AAENC,MAAAA,OAAO,EAAEJ,KAAK,CAACK,OAAN,CAAc,CAAd,EAAiB,CAAjB;AAFH;AAD6B,GAAL;AAAA,CAAN,CAA5B;AAOA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAClC,MAAMC,OAAO,GAAGT,SAAS,EAAzB;AADkC,MAE1BU,KAF0B,GAETF,KAFS,CAE1BE,KAF0B;AAAA,MAEnBC,KAFmB,GAETH,KAFS,CAEnBG,KAFmB;AAIlC,SACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,EAAE,EAAE;AAAvB,KACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,YAAY;AAArC,KACGA,KADH,CADF,EAIE,oBAAC,OAAD,OAJF,EAKGD,KAAK,CAACE,GAAN,CAAU,UAAAC,IAAI;AAAA,WACb,oBAAC,QAAD;AAAU,MAAA,SAAS,EAAEJ,OAAO,CAACP,QAA7B;AAAuC,MAAA,GAAG,EAAEW,IAAI,CAACC,SAAL,CAAe,CAAf,EAAkB,EAAlB;AAA5C,OACGD,IADH,CADa;AAAA,GAAd,CALH,CADF;AAaD;AAEDN,IAAI,CAACQ,SAAL,GAAiB;AACfL,EAAAA,KAAK,EAAEhB,SAAS,CAACsB,KADF;AAEfL,EAAAA,KAAK,EAAEjB,SAAS,CAACuB;AAFF,CAAjB","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Markdown from \"./Markdown\";\n\nconst useStyles = makeStyles(theme => ({\n  markdown: {\n    ...theme.typography.body2,\n    padding: theme.spacing(3, 0)\n  }\n}));\n\nexport default function Main(props) {\n  const classes = useStyles();\n  const { posts, title } = props;\n\n  return (\n    <Grid item xs={12} md={8}>\n      <Typography variant=\"h6\" gutterBottom>\n        {title}\n      </Typography>\n      <Divider />\n      {posts.map(post => (\n        <Markdown className={classes.markdown} key={post.substring(0, 40)}>\n          {post}\n        </Markdown>\n      ))}\n    </Grid>\n  );\n}\n\nMain.propTypes = {\n  posts: PropTypes.array,\n  title: PropTypes.string,\n};\n"]},"metadata":{},"sourceType":"module"}